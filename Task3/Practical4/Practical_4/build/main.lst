ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** // TODO: Add values for below variables
  39:Core/Src/main.c **** #define NS 128      // Number of samples in LUT
  40:Core/Src/main.c **** #define TIM2CLK 16000000  // STM Clock frequency: Hint You might want to check the ioc file
  41:Core/Src/main.c **** #define F_SIGNAL 440	// Frequency of output analog signal
  42:Core/Src/main.c **** #define TIM2_Ticks (uint32_t)((TIM2CLK) / ((NS) * (F_SIGNAL)))
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** // Task 1: Global variables including LUTs
  52:Core/Src/main.c **** uint32_t Saw_LUT[NS] = {
  53:Core/Src/main.c **** 	    0,    32,    64,    97,    129,    161,    193,    226,    258,    290,
  54:Core/Src/main.c **** 	    322,    355,    387,    419,    451,    484,    516,    548,    580,    613,
  55:Core/Src/main.c **** 	    645,    677,    709,    742,    774,    806,    838,    871,    903,    935,
  56:Core/Src/main.c **** 	    967,    1000,    1032,    1064,    1096,    1129,    1161,    1193,    1225,    1258,
  57:Core/Src/main.c **** 	    1290,    1322,    1354,    1386,    1419,    1451,    1483,    1515,    1548,    1580,
  58:Core/Src/main.c **** 	    1612,    1644,    1677,    1709,    1741,    1773,    1806,    1838,    1870,    1902,
  59:Core/Src/main.c **** 	    1935,    1967,    1999,    2031,    2064,    2096,    2128,    2160,    2193,    2225,
  60:Core/Src/main.c **** 	    2257,    2289,    2322,    2354,    2386,    2418,    2451,    2483,    2515,    2547,
  61:Core/Src/main.c **** 	    2580,    2612,    2644,    2676,    2709,    2741,    2773,    2805,    2837,    2870,
  62:Core/Src/main.c **** 	    2902,    2934,    2966,    2999,    3031,    3063,    3095,    3128,    3160,    3192,
  63:Core/Src/main.c **** 	    3224,    3257,    3289,    3321,    3353,    3386,    3418,    3450,    3482,    3515,
  64:Core/Src/main.c **** 	    3547,    3579,    3611,    3644,    3676,    3708,    3740,    3773,    3805,    3837,
  65:Core/Src/main.c **** 	    3869,    3902,    3934,    3966,    3998,    4031,    4063,    4095,
  66:Core/Src/main.c **** 	};
  67:Core/Src/main.c **** uint32_t Triangle_LUT[NS] = {
  68:Core/Src/main.c ****     0,    64,    128,    192,    256,    320,    384,    448,    512,    576,
  69:Core/Src/main.c ****     640,    704,    768,    832,    896,    960,    1024,    1088,    1152,    1216,
  70:Core/Src/main.c ****     1280,    1344,    1408,    1472,    1536,    1600,    1664,    1728,    1792,    1856,
  71:Core/Src/main.c ****     1920,    1984,    2048,    2111,    2175,    2239,    2303,    2367,    2431,    2495,
  72:Core/Src/main.c ****     2559,    2623,    2687,    2751,    2815,    2879,    2943,    3007,    3071,    3135,
  73:Core/Src/main.c ****     3199,    3263,    3327,    3391,    3455,    3519,    3583,    3647,    3711,    3775,
  74:Core/Src/main.c ****     3839,    3903,    3967,    4031,    4095,    4031,    3967,    3903,    3839,    3775,
  75:Core/Src/main.c ****     3711,    3647,    3583,    3519,    3455,    3391,    3327,    3263,    3199,    3135,
  76:Core/Src/main.c ****     3071,    3007,    2943,    2879,    2815,    2751,    2687,    2623,    2559,    2495,
  77:Core/Src/main.c ****     2431,    2367,    2303,    2239,    2175,    2111,    2048,    1984,    1920,    1856,
  78:Core/Src/main.c ****     1792,    1728,    1664,    1600,    1536,    1472,    1408,    1344,    1280,    1216,
  79:Core/Src/main.c ****     1152,    1088,    1024,    960,    896,    832,    768,    704,    640,    576,
  80:Core/Src/main.c ****     512,    448,    384,    320,    256,    192,    128,    64,
  81:Core/Src/main.c **** };
  82:Core/Src/main.c **** uint32_t Piano_LUT[NS] = {
  83:Core/Src/main.c **** 	     2047,  2164,  1980,  2100,  2058,  2078,  2044,  2139,  2062,  2077,
  84:Core/Src/main.c **** 	     2067,  2051,  2008,  2404,  2073,  1768,  2042,  2045,  2012,  2058,
  85:Core/Src/main.c **** 	     2003,  2100,  1521,  2044,  2303,  2050,  3034,  1587,  1747,  1834,
  86:Core/Src/main.c **** 	     2294,  2259,  1515,  2207,  1942,  2070,  2024,  2079,  1780,  1899,
  87:Core/Src/main.c **** 	     1947,  2061,  2232,  1784,  2126,  1901,  2875,  2042,  2090,  2065,
  88:Core/Src/main.c **** 	     2056,  2035,  1969,  2037,  2770,  1940,  2405,  1772,  1937,  1992,
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 3


  89:Core/Src/main.c **** 	     1135,  1909,  1636,  2051,  1674,  2025,  2167,  2058,  2032,  2014,
  90:Core/Src/main.c **** 	     1855,  2130,  1970,  2080,  1739,  2514,  2224,  2025,  2352,  2241,
  91:Core/Src/main.c **** 	     2054,  2107,  2013,  2057,  2052,  2033,  2237,  2064,  2077,  1918,
  92:Core/Src/main.c **** 	     1860,  2030,  1996,  2247,  2049,  2127,  2414,  2031,  2109,  2065,
  93:Core/Src/main.c **** 	     2084,  2040,  1667,  1861,  1925,  2032,  2178,  2128,  2009,  2020,
  94:Core/Src/main.c **** 	     1838,  2188,  2037,  2078,  1985,  2058,  2080,  2044,  1926,  1862,
  95:Core/Src/main.c **** 	     1624,  1615,  2097,  2263,  2043,  2104,  1956,  2047
  96:Core/Src/main.c **** 	};
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** uint32_t Guitar_LUT[NS] = {
  99:Core/Src/main.c **** 	     2047,  2249,  2365,  2161,  2264,  1943,  1855,  2243,  1994,  2114,
 100:Core/Src/main.c **** 	     2067,  2029,  2067,  2204,  1756,  2062,  2042,  2076,  1786,  2470,
 101:Core/Src/main.c **** 	     1928,  1929,  2512,  1849,  1767,  2041,  2020,  2053,  2037,  2026,
 102:Core/Src/main.c **** 	     1958,  2059,  2052,  1991,  2007,  2136,  1880,  2176,  1984,  2034,
 103:Core/Src/main.c **** 	     1892,  2063,  2061,  2061,  2055,  1932,  2137,  2041,  1901,  1906,
 104:Core/Src/main.c **** 	     2283,  1866,  2311,  1964,  1887,  2319,  1993,  2159,  2086,  1782,
 105:Core/Src/main.c **** 	     1980,  2141,  2845,  2014,  1876,  2121,  2142,  2256,  2221,  2379,
 106:Core/Src/main.c **** 	     1682,  2340,  2089,  2020,  2078,  2062,  2374,  1909,  2061,  2054,
 107:Core/Src/main.c **** 	     2157,  2166,  1792,  2154,  2084,  1670,  1982,  1729,  2095,  2083,
 108:Core/Src/main.c **** 	     2038,  2034,  1960,  1918,  2090,  2046,  2379,  1833,  2352,  1851,
 109:Core/Src/main.c **** 	     2154,  1861,  2378,  2469,  1987,  2049,  2017,  2053,  2138,  1907,
 110:Core/Src/main.c **** 	     2055,  2046,  1677,  2183,  2051,  2007,  2241,  1999,  2003,  1736,
 111:Core/Src/main.c **** 	     2088,  1786,  2368,  1935,  1695,  2595,  2065,  2045
 112:Core/Src/main.c **** 	};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** uint32_t Drum_LUT[NS] = {
 115:Core/Src/main.c **** 	     2047,  3346,  1883,  2120,  2069,  3380,  1914,  1944,  2087,  2496,
 116:Core/Src/main.c **** 	     2028,  2028,  2035,  2013,  1461,  1852,  2090,  2024,  2047,  2060,
 117:Core/Src/main.c **** 	     2048,  2084,  2043,  2027,  2135,  1849,  2066,  2052,  2181,  2034,
 118:Core/Src/main.c **** 	     3000,  1260,  1485,  2104,  2430,  2106,  1784,  2054,  2029,  2039,
 119:Core/Src/main.c **** 	     4090,  1893,  2038,  2041,  2305,  2272,  1811,  1997,  2173,  2061,
 120:Core/Src/main.c **** 	     2013,  2048,   764,  2414,  2084,  2074,    33,  2225,  2033,  2026,
 121:Core/Src/main.c **** 	     2165,  2050,  2911,  2392,  4081,  1985,  2277,  2033,  2626,  2693,
 122:Core/Src/main.c **** 	     2061,  2100,  1798,  2013,  2088,  2046,  2686,  1901,  2049,  2074,
 123:Core/Src/main.c **** 	     2005,  2057,  2039,  2047,  2183,  2056,  2067,  2047,  2898,  2063,
 124:Core/Src/main.c **** 	     2020,  2077,  2004,  2054,  1776,  2037,   791,  2279,  1969,  2035,
 125:Core/Src/main.c **** 	     2041,  2041,  2088,  2040,  1706,  2058,  2062,  2030,  2050,  2409,
 126:Core/Src/main.c **** 	     2147,  2232,  2126,  2044,  2039,  1727,  2146,  2409,  2132,  4094,
 127:Core/Src/main.c **** 	     2149,  2011,  2042,  1633,  1970,   513,  2520,  2047
 128:Core/Src/main.c **** 	};
 129:Core/Src/main.c **** uint32_t Sin_LUT[NS] = {
 130:Core/Src/main.c **** 	    2048,    2148,    2248,    2348,    2447,    2545,    2642,    2737,    2831,    2923,
 131:Core/Src/main.c **** 	    3013,    3100,    3185,    3267,    3346,    3423,    3495,    3565,    3630,    3692,
 132:Core/Src/main.c **** 	    3750,    3804,    3853,    3898,    3939,    3975,    4007,    4034,    4056,    4073,
 133:Core/Src/main.c **** 	    4085,    4093,    4095,    4093,    4085,    4073,    4056,    4034,    4007,    3975,
 134:Core/Src/main.c **** 	    3939,    3898,    3853,    3804,    3750,    3692,    3630,    3565,    3495,    3423,
 135:Core/Src/main.c **** 	    3346,    3267,    3185,    3100,    3013,    2923,    2831,    2737,    2642,    2545,
 136:Core/Src/main.c **** 	    2447,    2348,    2248,    2148,    2048,    1947,    1847,    1747,    1648,    1550,
 137:Core/Src/main.c **** 	    1453,    1358,    1264,    1172,    1082,    995,    910,    828,    749,    672,
 138:Core/Src/main.c **** 	    600,    530,    465,    403,    345,    291,    242,    197,    156,    120,
 139:Core/Src/main.c **** 	    88,    61,    39,    22,    10,    2,    0,    2,    10,    22,
 140:Core/Src/main.c **** 	    39,    61,    88,    120,    156,    197,    242,    291,    345,    403,
 141:Core/Src/main.c **** 	    465,    530,    600,    672,    749,    828,    910,    995,    1082,    1172,
 142:Core/Src/main.c **** 	    1264,    1358,    1453,    1550,    1648,    1747,    1847,    1947,
 143:Core/Src/main.c **** 	};
 144:Core/Src/main.c **** // Remove this line: uint32_t TIM2_Ticks = 0;  // DELETE THIS
 145:Core/Src/main.c **** /* USER CODE END PV */
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** TIM_HandleTypeDef htim2;
 148:Core/Src/main.c **** TIM_HandleTypeDef htim3;
 149:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
 152:Core/Src/main.c ****  // How often to write new LUT value
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
 155:Core/Src/main.c **** volatile uint8_t current_waveform = 0;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE END PV */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 160:Core/Src/main.c **** void SystemClock_Config(void);
 161:Core/Src/main.c **** static void MX_GPIO_Init(void);
 162:Core/Src/main.c **** static void MX_DMA_Init(void);
 163:Core/Src/main.c **** static void MX_TIM2_Init(void);
 164:Core/Src/main.c **** static void MX_TIM3_Init(void);
 165:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 166:Core/Src/main.c **** void EXTI0_IRQHandler(void);
 167:Core/Src/main.c **** /* USER CODE END PFP */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 170:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /* USER CODE END 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief  The application entry point.
 176:Core/Src/main.c ****   * @retval int
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** int main(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END 1 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 188:Core/Src/main.c ****   HAL_Init();
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END Init */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Configure the system clock */
 195:Core/Src/main.c ****   SystemClock_Config();
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END SysInit */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* Initialize all configured peripherals */
 202:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 5


 203:Core/Src/main.c ****   MX_DMA_Init();
 204:Core/Src/main.c ****   MX_TIM2_Init();
 205:Core/Src/main.c ****   MX_TIM3_Init();
 206:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 207:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 208:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 209:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 210:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 211:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 212:Core/Src/main.c ****   HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, DestAddress, NS);
 213:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 214:Core/Src/main.c ****   init_LCD();
 215:Core/Src/main.c ****   lcd_command(CLEAR);
 216:Core/Src/main.c ****   lcd_putstring("Sine");
 217:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 218:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 219:Core/Src/main.c ****   /* USER CODE END 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* Infinite loop */
 222:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 223:Core/Src/main.c ****   while (1)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     /* USER CODE END WHILE */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   /* USER CODE END 3 */
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief System Clock Configuration
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** void SystemClock_Config(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 247:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 251:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 253:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 259:Core/Src/main.c ****   */
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 6


 260:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 261:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 262:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 263:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 265:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 275:Core/Src/main.c ****   * @param None
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** static void MX_TIM2_Init(void)
 279:Core/Src/main.c **** {
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 286:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 287:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 292:Core/Src/main.c ****   htim2.Instance = TIM2;
 293:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 294:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 295:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 296:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 297:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 298:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 303:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 312:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 313:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 7


 317:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 318:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 319:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 320:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 321:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 326:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 327:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 333:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 334:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 335:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 336:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 337:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 338:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****       Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 346:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 347:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /**
 352:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 353:Core/Src/main.c ****   * @param None
 354:Core/Src/main.c ****   * @retval None
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** static void MX_TIM3_Init(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 364:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 365:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 370:Core/Src/main.c ****   htim3.Instance = TIM3;
 371:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 372:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 373:Core/Src/main.c ****   htim3.Init.Period = 65535;
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 8


 374:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 375:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 376:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 381:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 382:Core/Src/main.c ****   {
 383:Core/Src/main.c ****     Error_Handler();
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 390:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 391:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c ****     Error_Handler();
 394:Core/Src/main.c ****   }
 395:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 396:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 397:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 398:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 399:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 400:Core/Src/main.c ****   {
 401:Core/Src/main.c ****     Error_Handler();
 402:Core/Src/main.c ****   }
 403:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 406:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** }
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** /**
 411:Core/Src/main.c ****   * Enable DMA controller clock
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c **** static void MX_DMA_Init(void)
 414:Core/Src/main.c **** {
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* DMA controller clock enable */
 417:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* DMA interrupt init */
 420:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 421:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 422:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** }
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /**
 427:Core/Src/main.c ****   * @brief GPIO Initialization Function
 428:Core/Src/main.c ****   * @param None
 429:Core/Src/main.c ****   * @retval None
 430:Core/Src/main.c ****   */
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 9


 431:Core/Src/main.c **** static void MX_GPIO_Init(void)
 432:Core/Src/main.c **** {
  28              		.loc 1 432 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 89B0     		sub	sp, sp, #36
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
 433:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 433 3 view .LVU1
  48              		.loc 1 433 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0394     		str	r4, [sp, #12]
  51 000a 0494     		str	r4, [sp, #16]
  52 000c 0594     		str	r4, [sp, #20]
  53 000e 0694     		str	r4, [sp, #24]
  54 0010 0794     		str	r4, [sp, #28]
 434:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 439:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  55              		.loc 1 439 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 439 3 view .LVU4
  58 0012 0094     		str	r4, [sp]
  59              		.loc 1 439 3 view .LVU5
  60 0014 2F4B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F08002 		orr	r2, r2, #128
  63 001c 1A63     		str	r2, [r3, #48]
  64              		.loc 1 439 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F08002 		and	r2, r2, #128
  67 0024 0092     		str	r2, [sp]
  68              		.loc 1 439 3 view .LVU7
  69 0026 009A     		ldr	r2, [sp]
  70              	.LBE4:
  71              		.loc 1 439 3 view .LVU8
 440:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  72              		.loc 1 440 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 440 3 view .LVU10
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 10


  75 0028 0194     		str	r4, [sp, #4]
  76              		.loc 1 440 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00102 		orr	r2, r2, #1
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 440 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00102 		and	r2, r2, #1
  83 0038 0192     		str	r2, [sp, #4]
  84              		.loc 1 440 3 view .LVU13
  85 003a 019A     		ldr	r2, [sp, #4]
  86              	.LBE5:
  87              		.loc 1 440 3 view .LVU14
 441:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  88              		.loc 1 441 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 441 3 view .LVU16
  91 003c 0294     		str	r4, [sp, #8]
  92              		.loc 1 441 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F00202 		orr	r2, r2, #2
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 441 3 view .LVU18
  97 0046 1B6B     		ldr	r3, [r3, #48]
  98 0048 03F00203 		and	r3, r3, #2
  99 004c 0293     		str	r3, [sp, #8]
 100              		.loc 1 441 3 view .LVU19
 101 004e 029B     		ldr	r3, [sp, #8]
 102              	.LBE6:
 103              		.loc 1 441 3 view .LVU20
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   // -------------------------------
 444:Core/Src/main.c ****   // LCD pins configuration
 445:Core/Src/main.c ****   // -------------------------------
 446:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 447:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 104              		.loc 1 447 3 view .LVU21
 105              		.loc 1 447 23 is_stmt 0 view .LVU22
 106 0050 4FF4404B 		mov	fp, #49152
 107 0054 CDF80CB0 		str	fp, [sp, #12]
 448:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 448 3 is_stmt 1 view .LVU23
 109              		.loc 1 448 24 is_stmt 0 view .LVU24
 110 0058 0126     		movs	r6, #1
 111 005a 0496     		str	r6, [sp, #16]
 449:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 449 3 is_stmt 1 view .LVU25
 450:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 450 3 view .LVU26
 451:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 451 3 view .LVU27
 115 005c DFF87CA0 		ldr	r10, .L3+8
 116 0060 03A9     		add	r1, sp, #12
 117 0062 5046     		mov	r0, r10
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 452:Core/Src/main.c **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 11


 453:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 454:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 120              		.loc 1 454 3 view .LVU28
 121              		.loc 1 454 23 is_stmt 0 view .LVU29
 122 0068 4FF44079 		mov	r9, #768
 123 006c CDF80C90 		str	r9, [sp, #12]
 455:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 124              		.loc 1 455 3 is_stmt 1 view .LVU30
 125 0070 DFF86C80 		ldr	r8, .L3+12
 126 0074 03A9     		add	r1, sp, #12
 127 0076 4046     		mov	r0, r8
 128 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 458:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 130              		.loc 1 458 3 view .LVU31
 131              		.loc 1 458 23 is_stmt 0 view .LVU32
 132 007c 4FF41047 		mov	r7, #36864
 133 0080 0397     		str	r7, [sp, #12]
 459:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 459 3 is_stmt 1 view .LVU33
 135 0082 154D     		ldr	r5, .L3+4
 136 0084 03A9     		add	r1, sp, #12
 137 0086 2846     		mov	r0, r5
 138 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   // Set all LCD pins LOW initially
 462:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 140              		.loc 1 462 3 view .LVU34
 141 008c 2246     		mov	r2, r4
 142 008e 5946     		mov	r1, fp
 143 0090 5046     		mov	r0, r10
 144 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL3:
 463:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 146              		.loc 1 463 3 view .LVU35
 147 0096 2246     		mov	r2, r4
 148 0098 4946     		mov	r1, r9
 149 009a 4046     		mov	r0, r8
 150 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL4:
 464:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 152              		.loc 1 464 3 view .LVU36
 153 00a0 2246     		mov	r2, r4
 154 00a2 3946     		mov	r1, r7
 155 00a4 2846     		mov	r0, r5
 156 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL5:
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   // -------------------------------
 468:Core/Src/main.c ****   // Button0 configuration (PA0)
 469:Core/Src/main.c ****   // -------------------------------
 470:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 158              		.loc 1 470 3 view .LVU37
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 12


 159              		.loc 1 470 23 is_stmt 0 view .LVU38
 160 00aa 0396     		str	r6, [sp, #12]
 471:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 161              		.loc 1 471 3 is_stmt 1 view .LVU39
 162              		.loc 1 471 24 is_stmt 0 view .LVU40
 163 00ac 4FF48813 		mov	r3, #1114112
 164 00b0 0493     		str	r3, [sp, #16]
 472:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 165              		.loc 1 472 3 is_stmt 1 view .LVU41
 166              		.loc 1 472 24 is_stmt 0 view .LVU42
 167 00b2 0596     		str	r6, [sp, #20]
 473:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 473 3 is_stmt 1 view .LVU43
 169 00b4 03A9     		add	r1, sp, #12
 170 00b6 2846     		mov	r0, r5
 171 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL6:
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 476:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 173              		.loc 1 476 3 view .LVU44
 174 00bc 2246     		mov	r2, r4
 175 00be 0221     		movs	r1, #2
 176 00c0 0620     		movs	r0, #6
 177 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL7:
 477:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 179              		.loc 1 477 3 view .LVU45
 180 00c6 0620     		movs	r0, #6
 181 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL8:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 480:Core/Src/main.c **** }
 183              		.loc 1 480 1 is_stmt 0 view .LVU46
 184 00cc 09B0     		add	sp, sp, #36
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 36
 187              		@ sp needed
 188 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 189              	.L4:
 190 00d2 00BF     		.align	2
 191              	.L3:
 192 00d4 00380240 		.word	1073887232
 193 00d8 00000240 		.word	1073872896
 194 00dc 00080240 		.word	1073874944
 195 00e0 00040240 		.word	1073873920
 196              		.cfi_endproc
 197              	.LFE142:
 199              		.section	.text.MX_DMA_Init,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	MX_DMA_Init:
 206              	.LFB141:
 414:Core/Src/main.c **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 13


 207              		.loc 1 414 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 16
 417:Core/Src/main.c **** 
 218              		.loc 1 417 3 view .LVU48
 219              	.LBB7:
 417:Core/Src/main.c **** 
 220              		.loc 1 417 3 view .LVU49
 221 0004 0021     		movs	r1, #0
 222 0006 0191     		str	r1, [sp, #4]
 417:Core/Src/main.c **** 
 223              		.loc 1 417 3 view .LVU50
 224 0008 094B     		ldr	r3, .L7
 225 000a 1A6B     		ldr	r2, [r3, #48]
 226 000c 42F40012 		orr	r2, r2, #2097152
 227 0010 1A63     		str	r2, [r3, #48]
 417:Core/Src/main.c **** 
 228              		.loc 1 417 3 view .LVU51
 229 0012 1B6B     		ldr	r3, [r3, #48]
 230 0014 03F40013 		and	r3, r3, #2097152
 231 0018 0193     		str	r3, [sp, #4]
 417:Core/Src/main.c **** 
 232              		.loc 1 417 3 view .LVU52
 233 001a 019B     		ldr	r3, [sp, #4]
 234              	.LBE7:
 417:Core/Src/main.c **** 
 235              		.loc 1 417 3 view .LVU53
 421:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 236              		.loc 1 421 3 view .LVU54
 237 001c 0A46     		mov	r2, r1
 238 001e 1020     		movs	r0, #16
 239 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 240              	.LVL9:
 422:Core/Src/main.c **** 
 241              		.loc 1 422 3 view .LVU55
 242 0024 1020     		movs	r0, #16
 243 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL10:
 424:Core/Src/main.c **** 
 245              		.loc 1 424 1 is_stmt 0 view .LVU56
 246 002a 03B0     		add	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 002c 5DF804FB 		ldr	pc, [sp], #4
 251              	.L8:
 252              		.align	2
 253              	.L7:
 254 0030 00380240 		.word	1073887232
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 14


 255              		.cfi_endproc
 256              	.LFE141:
 258              		.section	.rodata.EXTI0_IRQHandler.str1.4,"aMS",%progbits,1
 259              		.align	2
 260              	.LC0:
 261 0000 53696E65 		.ascii	"Sine\000"
 261      00
 262 0005 000000   		.align	2
 263              	.LC1:
 264 0008 53617774 		.ascii	"Sawtooth\000"
 264      6F6F7468 
 264      00
 265 0011 000000   		.align	2
 266              	.LC2:
 267 0014 54726961 		.ascii	"Triangle\000"
 267      6E676C65 
 267      00
 268 001d 000000   		.align	2
 269              	.LC3:
 270 0020 5069616E 		.ascii	"Piano\000"
 270      6F00
 271 0026 0000     		.align	2
 272              	.LC4:
 273 0028 47756974 		.ascii	"Guitar\000"
 273      617200
 274 002f 00       		.align	2
 275              	.LC5:
 276 0030 4472756D 		.ascii	"Drum\000"
 276      00
 277              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	EXTI0_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	EXTI0_IRQHandler:
 285              	.LFB143:
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 483:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 286              		.loc 1 483 28 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 484:Core/Src/main.c ****     // Debounce using HAL_GetTick()
 485:Core/Src/main.c ****     static uint32_t last_interrupt_time = 0;
 295              		.loc 1 485 5 view .LVU58
 486:Core/Src/main.c ****     uint32_t current_time = HAL_GetTick();
 296              		.loc 1 486 5 view .LVU59
 297              		.loc 1 486 29 is_stmt 0 view .LVU60
 298 0002 FFF7FEFF 		bl	HAL_GetTick
 299              	.LVL11:
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 15


 487:Core/Src/main.c ****     
 488:Core/Src/main.c ****     // Only process if 200ms has passed since last interrupt (debouncing)
 489:Core/Src/main.c ****     if (current_time - last_interrupt_time > 200) {
 300              		.loc 1 489 5 is_stmt 1 view .LVU61
 301              		.loc 1 489 22 is_stmt 0 view .LVU62
 302 0006 414B     		ldr	r3, .L22
 303 0008 1B68     		ldr	r3, [r3]
 304 000a C31A     		subs	r3, r0, r3
 305              		.loc 1 489 8 view .LVU63
 306 000c C82B     		cmp	r3, #200
 307 000e 03D8     		bhi	.L21
 308              	.LVL12:
 309              	.L10:
 490:Core/Src/main.c ****         last_interrupt_time = current_time;
 491:Core/Src/main.c ****         
 492:Core/Src/main.c ****         // Disable DMA transfer and abort IT
 493:Core/Src/main.c ****         __HAL_TIM_DISABLE_DMA(&htim2, TIM_DMA_CC1);
 494:Core/Src/main.c ****         HAL_DMA_Abort_IT(&hdma_tim2_ch1);
 495:Core/Src/main.c ****         
 496:Core/Src/main.c ****         // Move to next waveform (cycle through 0-5)
 497:Core/Src/main.c ****         current_waveform = (current_waveform + 1) % 6;
 498:Core/Src/main.c ****         
 499:Core/Src/main.c ****         // Start DMA in IT mode with new LUT and update LCD
 500:Core/Src/main.c ****         switch(current_waveform) {
 501:Core/Src/main.c ****             case 0:  // Sine wave
 502:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, DestAddress, NS);
 503:Core/Src/main.c ****                 lcd_command(CLEAR);
 504:Core/Src/main.c ****                 lcd_putstring("Sine");
 505:Core/Src/main.c ****                 break;
 506:Core/Src/main.c ****                 
 507:Core/Src/main.c ****             case 1:  // Sawtooth wave
 508:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Saw_LUT, DestAddress, NS);
 509:Core/Src/main.c ****                 lcd_command(CLEAR);
 510:Core/Src/main.c ****                 lcd_putstring("Sawtooth");
 511:Core/Src/main.c ****                 break;
 512:Core/Src/main.c ****                 
 513:Core/Src/main.c ****             case 2:  // Triangle wave
 514:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Triangle_LUT, DestAddress, NS);
 515:Core/Src/main.c ****                 lcd_command(CLEAR);
 516:Core/Src/main.c ****                 lcd_putstring("Triangle");
 517:Core/Src/main.c ****                 break;
 518:Core/Src/main.c ****                 
 519:Core/Src/main.c ****             case 3:  // Piano sound
 520:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Piano_LUT, DestAddress, NS);
 521:Core/Src/main.c ****                 lcd_command(CLEAR);
 522:Core/Src/main.c ****                 lcd_putstring("Piano");
 523:Core/Src/main.c ****                 break;
 524:Core/Src/main.c ****                 
 525:Core/Src/main.c ****             case 4:  // Guitar sound
 526:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Guitar_LUT, DestAddress, NS);
 527:Core/Src/main.c ****                 lcd_command(CLEAR);
 528:Core/Src/main.c ****                 lcd_putstring("Guitar");
 529:Core/Src/main.c ****                 break;
 530:Core/Src/main.c ****                 
 531:Core/Src/main.c ****             case 5:  // Drum sound
 532:Core/Src/main.c ****                 HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Drum_LUT, DestAddress, NS);
 533:Core/Src/main.c ****                 lcd_command(CLEAR);
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 16


 534:Core/Src/main.c ****                 lcd_putstring("Drum");
 535:Core/Src/main.c ****                 break;
 536:Core/Src/main.c ****         }
 537:Core/Src/main.c ****         
 538:Core/Src/main.c ****         // Re-enable DMA transfer
 539:Core/Src/main.c ****         __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 540:Core/Src/main.c ****     }
 541:Core/Src/main.c ****     
 542:Core/Src/main.c ****     // Clear interrupt flags (must be at the end)
 543:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(Button0_Pin);
 310              		.loc 1 543 5 is_stmt 1 view .LVU64
 311 0010 0120     		movs	r0, #1
 312 0012 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 313              	.LVL13:
 544:Core/Src/main.c **** }
 314              		.loc 1 544 1 is_stmt 0 view .LVU65
 315 0016 08BD     		pop	{r3, pc}
 316              	.LVL14:
 317              	.L21:
 490:Core/Src/main.c ****         last_interrupt_time = current_time;
 318              		.loc 1 490 9 is_stmt 1 view .LVU66
 490:Core/Src/main.c ****         last_interrupt_time = current_time;
 319              		.loc 1 490 29 is_stmt 0 view .LVU67
 320 0018 3C4B     		ldr	r3, .L22
 321 001a 1860     		str	r0, [r3]
 493:Core/Src/main.c ****         HAL_DMA_Abort_IT(&hdma_tim2_ch1);
 322              		.loc 1 493 9 is_stmt 1 view .LVU68
 323 001c 3C4B     		ldr	r3, .L22+4
 324 001e 1A68     		ldr	r2, [r3]
 325 0020 D368     		ldr	r3, [r2, #12]
 326 0022 23F40073 		bic	r3, r3, #512
 327 0026 D360     		str	r3, [r2, #12]
 494:Core/Src/main.c ****         
 328              		.loc 1 494 9 view .LVU69
 329 0028 3A48     		ldr	r0, .L22+8
 330              	.LVL15:
 494:Core/Src/main.c ****         
 331              		.loc 1 494 9 is_stmt 0 view .LVU70
 332 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 333              	.LVL16:
 497:Core/Src/main.c ****         
 334              		.loc 1 497 9 is_stmt 1 view .LVU71
 497:Core/Src/main.c ****         
 335              		.loc 1 497 46 is_stmt 0 view .LVU72
 336 002e 3A49     		ldr	r1, .L22+12
 337 0030 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 338 0032 0132     		adds	r2, r2, #1
 497:Core/Src/main.c ****         
 339              		.loc 1 497 51 view .LVU73
 340 0034 394B     		ldr	r3, .L22+16
 341 0036 83FB0203 		smull	r0, r3, r3, r2
 342 003a 03EB4303 		add	r3, r3, r3, lsl #1
 343 003e A2EB4303 		sub	r3, r2, r3, lsl #1
 497:Core/Src/main.c ****         
 344              		.loc 1 497 26 view .LVU74
 345 0042 DBB2     		uxtb	r3, r3
 346 0044 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 17


 500:Core/Src/main.c ****             case 0:  // Sine wave
 347              		.loc 1 500 9 is_stmt 1 view .LVU75
 348 0046 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 349 0048 DBB2     		uxtb	r3, r3
 350 004a 052B     		cmp	r3, #5
 351 004c 11D8     		bhi	.L11
 352 004e DFE803F0 		tbb	[pc, r3]
 353              	.L13:
 354 0052 03       		.byte	(.L18-.L13)/2
 355 0053 17       		.byte	(.L17-.L13)/2
 356 0054 25       		.byte	(.L16-.L13)/2
 357 0055 33       		.byte	(.L15-.L13)/2
 358 0056 41       		.byte	(.L14-.L13)/2
 359 0057 4F       		.byte	(.L12-.L13)/2
 360              		.p2align 1
 361              	.L18:
 502:Core/Src/main.c ****                 lcd_command(CLEAR);
 362              		.loc 1 502 17 view .LVU76
 363 0058 8023     		movs	r3, #128
 364 005a 314A     		ldr	r2, .L22+20
 365 005c 1268     		ldr	r2, [r2]
 366 005e 3149     		ldr	r1, .L22+24
 367 0060 2C48     		ldr	r0, .L22+8
 368 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 369              	.LVL17:
 503:Core/Src/main.c ****                 lcd_putstring("Sine");
 370              		.loc 1 503 17 view .LVU77
 371 0066 0120     		movs	r0, #1
 372 0068 FFF7FEFF 		bl	lcd_command
 373              	.LVL18:
 504:Core/Src/main.c ****                 break;
 374              		.loc 1 504 17 view .LVU78
 375 006c 2E48     		ldr	r0, .L22+28
 376 006e FFF7FEFF 		bl	lcd_putstring
 377              	.LVL19:
 505:Core/Src/main.c ****                 
 378              		.loc 1 505 17 view .LVU79
 379              	.L11:
 539:Core/Src/main.c ****     }
 380              		.loc 1 539 9 view .LVU80
 381 0072 274B     		ldr	r3, .L22+4
 382 0074 1A68     		ldr	r2, [r3]
 383 0076 D368     		ldr	r3, [r2, #12]
 384 0078 43F40073 		orr	r3, r3, #512
 385 007c D360     		str	r3, [r2, #12]
 386 007e C7E7     		b	.L10
 387              	.L17:
 508:Core/Src/main.c ****                 lcd_command(CLEAR);
 388              		.loc 1 508 17 view .LVU81
 389 0080 8023     		movs	r3, #128
 390 0082 274A     		ldr	r2, .L22+20
 391 0084 1268     		ldr	r2, [r2]
 392 0086 2949     		ldr	r1, .L22+32
 393 0088 2248     		ldr	r0, .L22+8
 394 008a FFF7FEFF 		bl	HAL_DMA_Start_IT
 395              	.LVL20:
 509:Core/Src/main.c ****                 lcd_putstring("Sawtooth");
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 18


 396              		.loc 1 509 17 view .LVU82
 397 008e 0120     		movs	r0, #1
 398 0090 FFF7FEFF 		bl	lcd_command
 399              	.LVL21:
 510:Core/Src/main.c ****                 break;
 400              		.loc 1 510 17 view .LVU83
 401 0094 2648     		ldr	r0, .L22+36
 402 0096 FFF7FEFF 		bl	lcd_putstring
 403              	.LVL22:
 511:Core/Src/main.c ****                 
 404              		.loc 1 511 17 view .LVU84
 405 009a EAE7     		b	.L11
 406              	.L16:
 514:Core/Src/main.c ****                 lcd_command(CLEAR);
 407              		.loc 1 514 17 view .LVU85
 408 009c 8023     		movs	r3, #128
 409 009e 204A     		ldr	r2, .L22+20
 410 00a0 1268     		ldr	r2, [r2]
 411 00a2 2449     		ldr	r1, .L22+40
 412 00a4 1B48     		ldr	r0, .L22+8
 413 00a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 414              	.LVL23:
 515:Core/Src/main.c ****                 lcd_putstring("Triangle");
 415              		.loc 1 515 17 view .LVU86
 416 00aa 0120     		movs	r0, #1
 417 00ac FFF7FEFF 		bl	lcd_command
 418              	.LVL24:
 516:Core/Src/main.c ****                 break;
 419              		.loc 1 516 17 view .LVU87
 420 00b0 2148     		ldr	r0, .L22+44
 421 00b2 FFF7FEFF 		bl	lcd_putstring
 422              	.LVL25:
 517:Core/Src/main.c ****                 
 423              		.loc 1 517 17 view .LVU88
 424 00b6 DCE7     		b	.L11
 425              	.L15:
 520:Core/Src/main.c ****                 lcd_command(CLEAR);
 426              		.loc 1 520 17 view .LVU89
 427 00b8 8023     		movs	r3, #128
 428 00ba 194A     		ldr	r2, .L22+20
 429 00bc 1268     		ldr	r2, [r2]
 430 00be 1F49     		ldr	r1, .L22+48
 431 00c0 1448     		ldr	r0, .L22+8
 432 00c2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 433              	.LVL26:
 521:Core/Src/main.c ****                 lcd_putstring("Piano");
 434              		.loc 1 521 17 view .LVU90
 435 00c6 0120     		movs	r0, #1
 436 00c8 FFF7FEFF 		bl	lcd_command
 437              	.LVL27:
 522:Core/Src/main.c ****                 break;
 438              		.loc 1 522 17 view .LVU91
 439 00cc 1C48     		ldr	r0, .L22+52
 440 00ce FFF7FEFF 		bl	lcd_putstring
 441              	.LVL28:
 523:Core/Src/main.c ****                 
 442              		.loc 1 523 17 view .LVU92
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 19


 443 00d2 CEE7     		b	.L11
 444              	.L14:
 526:Core/Src/main.c ****                 lcd_command(CLEAR);
 445              		.loc 1 526 17 view .LVU93
 446 00d4 8023     		movs	r3, #128
 447 00d6 124A     		ldr	r2, .L22+20
 448 00d8 1268     		ldr	r2, [r2]
 449 00da 1A49     		ldr	r1, .L22+56
 450 00dc 0D48     		ldr	r0, .L22+8
 451 00de FFF7FEFF 		bl	HAL_DMA_Start_IT
 452              	.LVL29:
 527:Core/Src/main.c ****                 lcd_putstring("Guitar");
 453              		.loc 1 527 17 view .LVU94
 454 00e2 0120     		movs	r0, #1
 455 00e4 FFF7FEFF 		bl	lcd_command
 456              	.LVL30:
 528:Core/Src/main.c ****                 break;
 457              		.loc 1 528 17 view .LVU95
 458 00e8 1748     		ldr	r0, .L22+60
 459 00ea FFF7FEFF 		bl	lcd_putstring
 460              	.LVL31:
 529:Core/Src/main.c ****                 
 461              		.loc 1 529 17 view .LVU96
 462 00ee C0E7     		b	.L11
 463              	.L12:
 532:Core/Src/main.c ****                 lcd_command(CLEAR);
 464              		.loc 1 532 17 view .LVU97
 465 00f0 8023     		movs	r3, #128
 466 00f2 0B4A     		ldr	r2, .L22+20
 467 00f4 1268     		ldr	r2, [r2]
 468 00f6 1549     		ldr	r1, .L22+64
 469 00f8 0648     		ldr	r0, .L22+8
 470 00fa FFF7FEFF 		bl	HAL_DMA_Start_IT
 471              	.LVL32:
 533:Core/Src/main.c ****                 lcd_putstring("Drum");
 472              		.loc 1 533 17 view .LVU98
 473 00fe 0120     		movs	r0, #1
 474 0100 FFF7FEFF 		bl	lcd_command
 475              	.LVL33:
 534:Core/Src/main.c ****                 break;
 476              		.loc 1 534 17 view .LVU99
 477 0104 1248     		ldr	r0, .L22+68
 478 0106 FFF7FEFF 		bl	lcd_putstring
 479              	.LVL34:
 535:Core/Src/main.c ****         }
 480              		.loc 1 535 17 view .LVU100
 481 010a B2E7     		b	.L11
 482              	.L23:
 483              		.align	2
 484              	.L22:
 485 010c 00000000 		.word	last_interrupt_time.0
 486 0110 00000000 		.word	htim2
 487 0114 00000000 		.word	hdma_tim2_ch1
 488 0118 00000000 		.word	current_waveform
 489 011c ABAAAA2A 		.word	715827883
 490 0120 00000000 		.word	DestAddress
 491 0124 00000000 		.word	Sin_LUT
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 20


 492 0128 00000000 		.word	.LC0
 493 012c 00000000 		.word	Saw_LUT
 494 0130 08000000 		.word	.LC1
 495 0134 00000000 		.word	Triangle_LUT
 496 0138 14000000 		.word	.LC2
 497 013c 00000000 		.word	Piano_LUT
 498 0140 20000000 		.word	.LC3
 499 0144 00000000 		.word	Guitar_LUT
 500 0148 28000000 		.word	.LC4
 501 014c 00000000 		.word	Drum_LUT
 502 0150 30000000 		.word	.LC5
 503              		.cfi_endproc
 504              	.LFE143:
 506              		.section	.text.Error_Handler,"ax",%progbits
 507              		.align	1
 508              		.global	Error_Handler
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	Error_Handler:
 514              	.LFB144:
 545:Core/Src/main.c **** /* USER CODE END 4 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** /**
 548:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 549:Core/Src/main.c ****   * @retval None
 550:Core/Src/main.c ****   */
 551:Core/Src/main.c **** void Error_Handler(void)
 552:Core/Src/main.c **** {
 515              		.loc 1 552 1 view -0
 516              		.cfi_startproc
 517              		@ Volatile: function does not return.
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 553:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 554:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 555:Core/Src/main.c ****   __disable_irq();
 521              		.loc 1 555 3 view .LVU102
 522              	.LBB8:
 523              	.LBI8:
 524              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 21


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 22


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 23


 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 24


 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 25


 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 26


 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 27


 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 28


 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 29


 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 30


 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 31


 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 32


 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 33


 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 34


 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 35


 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 36


 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 37


 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 525              		.loc 2 960 27 view .LVU103
 526              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 527              		.loc 2 962 3 view .LVU104
 528              		.syntax unified
 529              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 530 0000 72B6     		cpsid i
 531              	@ 0 "" 2
 532              		.thumb
 533              		.syntax unified
 534              	.L25:
 535              	.LBE9:
 536              	.LBE8:
 556:Core/Src/main.c ****   while (1)
 537              		.loc 1 556 3 view .LVU105
 557:Core/Src/main.c ****   {
 558:Core/Src/main.c ****   }
 538              		.loc 1 558 3 view .LVU106
 556:Core/Src/main.c ****   while (1)
 539              		.loc 1 556 9 view .LVU107
 540 0002 FEE7     		b	.L25
 541              		.cfi_endproc
 542              	.LFE144:
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 38


 544              		.section	.text.MX_TIM2_Init,"ax",%progbits
 545              		.align	1
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	MX_TIM2_Init:
 551              	.LFB139:
 279:Core/Src/main.c **** 
 552              		.loc 1 279 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 56
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 00B5     		push	{lr}
 557              	.LCFI7:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 14, -4
 560 0002 8FB0     		sub	sp, sp, #60
 561              	.LCFI8:
 562              		.cfi_def_cfa_offset 64
 285:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 563              		.loc 1 285 3 view .LVU109
 285:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 564              		.loc 1 285 26 is_stmt 0 view .LVU110
 565 0004 0023     		movs	r3, #0
 566 0006 0A93     		str	r3, [sp, #40]
 567 0008 0B93     		str	r3, [sp, #44]
 568 000a 0C93     		str	r3, [sp, #48]
 569 000c 0D93     		str	r3, [sp, #52]
 286:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 570              		.loc 1 286 3 is_stmt 1 view .LVU111
 286:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 571              		.loc 1 286 27 is_stmt 0 view .LVU112
 572 000e 0893     		str	r3, [sp, #32]
 573 0010 0993     		str	r3, [sp, #36]
 287:Core/Src/main.c **** 
 574              		.loc 1 287 3 is_stmt 1 view .LVU113
 287:Core/Src/main.c **** 
 575              		.loc 1 287 22 is_stmt 0 view .LVU114
 576 0012 0193     		str	r3, [sp, #4]
 577 0014 0293     		str	r3, [sp, #8]
 578 0016 0393     		str	r3, [sp, #12]
 579 0018 0493     		str	r3, [sp, #16]
 580 001a 0593     		str	r3, [sp, #20]
 581 001c 0693     		str	r3, [sp, #24]
 582 001e 0793     		str	r3, [sp, #28]
 292:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 583              		.loc 1 292 3 is_stmt 1 view .LVU115
 292:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 584              		.loc 1 292 18 is_stmt 0 view .LVU116
 585 0020 3548     		ldr	r0, .L40
 586 0022 4FF08042 		mov	r2, #1073741824
 587 0026 0260     		str	r2, [r0]
 293:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 588              		.loc 1 293 3 is_stmt 1 view .LVU117
 293:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 589              		.loc 1 293 24 is_stmt 0 view .LVU118
 590 0028 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 39


 294:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 591              		.loc 1 294 3 is_stmt 1 view .LVU119
 294:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 592              		.loc 1 294 26 is_stmt 0 view .LVU120
 593 002a 8360     		str	r3, [r0, #8]
 295:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 594              		.loc 1 295 3 is_stmt 1 view .LVU121
 295:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 595              		.loc 1 295 21 is_stmt 0 view .LVU122
 596 002c 40F21B12 		movw	r2, #283
 597 0030 C260     		str	r2, [r0, #12]
 296:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 598              		.loc 1 296 3 is_stmt 1 view .LVU123
 296:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 599              		.loc 1 296 28 is_stmt 0 view .LVU124
 600 0032 0361     		str	r3, [r0, #16]
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 601              		.loc 1 297 3 is_stmt 1 view .LVU125
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 602              		.loc 1 297 32 is_stmt 0 view .LVU126
 603 0034 8361     		str	r3, [r0, #24]
 298:Core/Src/main.c ****   {
 604              		.loc 1 298 3 is_stmt 1 view .LVU127
 298:Core/Src/main.c ****   {
 605              		.loc 1 298 7 is_stmt 0 view .LVU128
 606 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 607              	.LVL35:
 298:Core/Src/main.c ****   {
 608              		.loc 1 298 6 discriminator 1 view .LVU129
 609 003a 0028     		cmp	r0, #0
 610 003c 50D1     		bne	.L34
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 611              		.loc 1 302 3 is_stmt 1 view .LVU130
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 612              		.loc 1 302 34 is_stmt 0 view .LVU131
 613 003e 4FF48053 		mov	r3, #4096
 614 0042 0A93     		str	r3, [sp, #40]
 303:Core/Src/main.c ****   {
 615              		.loc 1 303 3 is_stmt 1 view .LVU132
 303:Core/Src/main.c ****   {
 616              		.loc 1 303 7 is_stmt 0 view .LVU133
 617 0044 0AA9     		add	r1, sp, #40
 618 0046 2C48     		ldr	r0, .L40
 619 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 620              	.LVL36:
 303:Core/Src/main.c ****   {
 621              		.loc 1 303 6 discriminator 1 view .LVU134
 622 004c 0028     		cmp	r0, #0
 623 004e 49D1     		bne	.L35
 307:Core/Src/main.c ****   {
 624              		.loc 1 307 3 is_stmt 1 view .LVU135
 307:Core/Src/main.c ****   {
 625              		.loc 1 307 7 is_stmt 0 view .LVU136
 626 0050 2948     		ldr	r0, .L40
 627 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 628              	.LVL37:
 307:Core/Src/main.c ****   {
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 40


 629              		.loc 1 307 6 discriminator 1 view .LVU137
 630 0056 0028     		cmp	r0, #0
 631 0058 46D1     		bne	.L36
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 632              		.loc 1 311 3 is_stmt 1 view .LVU138
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 633              		.loc 1 311 37 is_stmt 0 view .LVU139
 634 005a 0023     		movs	r3, #0
 635 005c 0893     		str	r3, [sp, #32]
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 636              		.loc 1 312 3 is_stmt 1 view .LVU140
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 637              		.loc 1 312 33 is_stmt 0 view .LVU141
 638 005e 0993     		str	r3, [sp, #36]
 313:Core/Src/main.c ****   {
 639              		.loc 1 313 3 is_stmt 1 view .LVU142
 313:Core/Src/main.c ****   {
 640              		.loc 1 313 7 is_stmt 0 view .LVU143
 641 0060 08A9     		add	r1, sp, #32
 642 0062 2548     		ldr	r0, .L40
 643 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 644              	.LVL38:
 313:Core/Src/main.c ****   {
 645              		.loc 1 313 6 discriminator 1 view .LVU144
 646 0068 0028     		cmp	r0, #0
 647 006a 3FD1     		bne	.L37
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 648              		.loc 1 317 3 is_stmt 1 view .LVU145
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 649              		.loc 1 317 20 is_stmt 0 view .LVU146
 650 006c 0022     		movs	r2, #0
 651 006e 0192     		str	r2, [sp, #4]
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 652              		.loc 1 318 3 is_stmt 1 view .LVU147
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 653              		.loc 1 318 19 is_stmt 0 view .LVU148
 654 0070 0292     		str	r2, [sp, #8]
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 655              		.loc 1 319 3 is_stmt 1 view .LVU149
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 656              		.loc 1 319 24 is_stmt 0 view .LVU150
 657 0072 0392     		str	r2, [sp, #12]
 320:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 658              		.loc 1 320 3 is_stmt 1 view .LVU151
 320:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 659              		.loc 1 320 24 is_stmt 0 view .LVU152
 660 0074 0592     		str	r2, [sp, #20]
 321:Core/Src/main.c ****   {
 661              		.loc 1 321 3 is_stmt 1 view .LVU153
 321:Core/Src/main.c ****   {
 662              		.loc 1 321 7 is_stmt 0 view .LVU154
 663 0076 01A9     		add	r1, sp, #4
 664 0078 1F48     		ldr	r0, .L40
 665 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 666              	.LVL39:
 321:Core/Src/main.c ****   {
 667              		.loc 1 321 6 discriminator 1 view .LVU155
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 41


 668 007e 0028     		cmp	r0, #0
 669 0080 36D1     		bne	.L38
 327:Core/Src/main.c **** 
 670              		.loc 1 327 3 is_stmt 1 view .LVU156
 671              	.LBB10:
 327:Core/Src/main.c **** 
 672              		.loc 1 327 3 view .LVU157
 673 0082 0023     		movs	r3, #0
 674 0084 0093     		str	r3, [sp]
 327:Core/Src/main.c **** 
 675              		.loc 1 327 3 view .LVU158
 676 0086 1D4A     		ldr	r2, .L40+4
 677 0088 116B     		ldr	r1, [r2, #48]
 678 008a 41F40011 		orr	r1, r1, #2097152
 679 008e 1163     		str	r1, [r2, #48]
 327:Core/Src/main.c **** 
 680              		.loc 1 327 3 view .LVU159
 681 0090 126B     		ldr	r2, [r2, #48]
 682 0092 02F40012 		and	r2, r2, #2097152
 683 0096 0092     		str	r2, [sp]
 327:Core/Src/main.c **** 
 684              		.loc 1 327 3 view .LVU160
 685 0098 009A     		ldr	r2, [sp]
 686              	.LBE10:
 327:Core/Src/main.c **** 
 687              		.loc 1 327 3 view .LVU161
 329:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 688              		.loc 1 329 3 view .LVU162
 329:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 689              		.loc 1 329 26 is_stmt 0 view .LVU163
 690 009a 1948     		ldr	r0, .L40+8
 691 009c 194A     		ldr	r2, .L40+12
 692 009e 0260     		str	r2, [r0]
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 693              		.loc 1 330 3 is_stmt 1 view .LVU164
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 694              		.loc 1 330 30 is_stmt 0 view .LVU165
 695 00a0 4FF0C062 		mov	r2, #100663296
 696 00a4 4260     		str	r2, [r0, #4]
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 697              		.loc 1 331 3 is_stmt 1 view .LVU166
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 698              		.loc 1 331 32 is_stmt 0 view .LVU167
 699 00a6 4022     		movs	r2, #64
 700 00a8 8260     		str	r2, [r0, #8]
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 701              		.loc 1 332 3 is_stmt 1 view .LVU168
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 702              		.loc 1 332 32 is_stmt 0 view .LVU169
 703 00aa C360     		str	r3, [r0, #12]
 333:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 704              		.loc 1 333 3 is_stmt 1 view .LVU170
 333:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 705              		.loc 1 333 29 is_stmt 0 view .LVU171
 706 00ac 4FF48062 		mov	r2, #1024
 707 00b0 0261     		str	r2, [r0, #16]
 334:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 42


 708              		.loc 1 334 3 is_stmt 1 view .LVU172
 334:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 709              		.loc 1 334 42 is_stmt 0 view .LVU173
 710 00b2 4FF48052 		mov	r2, #4096
 711 00b6 4261     		str	r2, [r0, #20]
 335:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 712              		.loc 1 335 3 is_stmt 1 view .LVU174
 335:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 713              		.loc 1 335 39 is_stmt 0 view .LVU175
 714 00b8 4FF48042 		mov	r2, #16384
 715 00bc 8261     		str	r2, [r0, #24]
 336:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 716              		.loc 1 336 3 is_stmt 1 view .LVU176
 336:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 717              		.loc 1 336 27 is_stmt 0 view .LVU177
 718 00be 4FF48072 		mov	r2, #256
 719 00c2 C261     		str	r2, [r0, #28]
 337:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 720              		.loc 1 337 3 is_stmt 1 view .LVU178
 337:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 721              		.loc 1 337 31 is_stmt 0 view .LVU179
 722 00c4 4FF40032 		mov	r2, #131072
 723 00c8 0262     		str	r2, [r0, #32]
 338:Core/Src/main.c **** 
 724              		.loc 1 338 3 is_stmt 1 view .LVU180
 338:Core/Src/main.c **** 
 725              		.loc 1 338 31 is_stmt 0 view .LVU181
 726 00ca 4362     		str	r3, [r0, #36]
 340:Core/Src/main.c ****   {
 727              		.loc 1 340 3 is_stmt 1 view .LVU182
 340:Core/Src/main.c ****   {
 728              		.loc 1 340 7 is_stmt 0 view .LVU183
 729 00cc FFF7FEFF 		bl	HAL_DMA_Init
 730              	.LVL40:
 340:Core/Src/main.c ****   {
 731              		.loc 1 340 6 discriminator 1 view .LVU184
 732 00d0 80B9     		cbnz	r0, .L39
 346:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 733              		.loc 1 346 3 is_stmt 1 view .LVU185
 346:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 734              		.loc 1 346 3 view .LVU186
 735 00d2 094A     		ldr	r2, .L40
 736 00d4 0A4B     		ldr	r3, .L40+8
 737 00d6 5362     		str	r3, [r2, #36]
 346:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 738              		.loc 1 346 3 view .LVU187
 739 00d8 9A63     		str	r2, [r3, #56]
 346:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 740              		.loc 1 346 3 view .LVU188
 349:Core/Src/main.c **** 
 741              		.loc 1 349 1 is_stmt 0 view .LVU189
 742 00da 0FB0     		add	sp, sp, #60
 743              	.LCFI9:
 744              		.cfi_remember_state
 745              		.cfi_def_cfa_offset 4
 746              		@ sp needed
 747 00dc 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 43


 748              	.L34:
 749              	.LCFI10:
 750              		.cfi_restore_state
 300:Core/Src/main.c ****   }
 751              		.loc 1 300 5 is_stmt 1 view .LVU190
 752 00e0 FFF7FEFF 		bl	Error_Handler
 753              	.LVL41:
 754              	.L35:
 305:Core/Src/main.c ****   }
 755              		.loc 1 305 5 view .LVU191
 756 00e4 FFF7FEFF 		bl	Error_Handler
 757              	.LVL42:
 758              	.L36:
 309:Core/Src/main.c ****   }
 759              		.loc 1 309 5 view .LVU192
 760 00e8 FFF7FEFF 		bl	Error_Handler
 761              	.LVL43:
 762              	.L37:
 315:Core/Src/main.c ****   }
 763              		.loc 1 315 5 view .LVU193
 764 00ec FFF7FEFF 		bl	Error_Handler
 765              	.LVL44:
 766              	.L38:
 323:Core/Src/main.c ****   }
 767              		.loc 1 323 5 view .LVU194
 768 00f0 FFF7FEFF 		bl	Error_Handler
 769              	.LVL45:
 770              	.L39:
 342:Core/Src/main.c ****   }
 771              		.loc 1 342 7 view .LVU195
 772 00f4 FFF7FEFF 		bl	Error_Handler
 773              	.LVL46:
 774              	.L41:
 775              		.align	2
 776              	.L40:
 777 00f8 00000000 		.word	htim2
 778 00fc 00380240 		.word	1073887232
 779 0100 00000000 		.word	hdma_tim2_ch1
 780 0104 88600240 		.word	1073897608
 781              		.cfi_endproc
 782              	.LFE139:
 784              		.section	.text.MX_TIM3_Init,"ax",%progbits
 785              		.align	1
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 790              	MX_TIM3_Init:
 791              	.LFB140:
 357:Core/Src/main.c **** 
 792              		.loc 1 357 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 56
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 0000 00B5     		push	{lr}
 797              	.LCFI11:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 14, -4
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 44


 800 0002 8FB0     		sub	sp, sp, #60
 801              	.LCFI12:
 802              		.cfi_def_cfa_offset 64
 363:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 803              		.loc 1 363 3 view .LVU197
 363:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 804              		.loc 1 363 26 is_stmt 0 view .LVU198
 805 0004 0023     		movs	r3, #0
 806 0006 0A93     		str	r3, [sp, #40]
 807 0008 0B93     		str	r3, [sp, #44]
 808 000a 0C93     		str	r3, [sp, #48]
 809 000c 0D93     		str	r3, [sp, #52]
 364:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 810              		.loc 1 364 3 is_stmt 1 view .LVU199
 364:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 811              		.loc 1 364 27 is_stmt 0 view .LVU200
 812 000e 0893     		str	r3, [sp, #32]
 813 0010 0993     		str	r3, [sp, #36]
 365:Core/Src/main.c **** 
 814              		.loc 1 365 3 is_stmt 1 view .LVU201
 365:Core/Src/main.c **** 
 815              		.loc 1 365 22 is_stmt 0 view .LVU202
 816 0012 0193     		str	r3, [sp, #4]
 817 0014 0293     		str	r3, [sp, #8]
 818 0016 0393     		str	r3, [sp, #12]
 819 0018 0493     		str	r3, [sp, #16]
 820 001a 0593     		str	r3, [sp, #20]
 821 001c 0693     		str	r3, [sp, #24]
 822 001e 0793     		str	r3, [sp, #28]
 370:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 823              		.loc 1 370 3 is_stmt 1 view .LVU203
 370:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 824              		.loc 1 370 18 is_stmt 0 view .LVU204
 825 0020 1E48     		ldr	r0, .L54
 826 0022 1F4A     		ldr	r2, .L54+4
 827 0024 0260     		str	r2, [r0]
 371:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 371 3 is_stmt 1 view .LVU205
 371:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 829              		.loc 1 371 24 is_stmt 0 view .LVU206
 830 0026 4360     		str	r3, [r0, #4]
 372:Core/Src/main.c ****   htim3.Init.Period = 65535;
 831              		.loc 1 372 3 is_stmt 1 view .LVU207
 372:Core/Src/main.c ****   htim3.Init.Period = 65535;
 832              		.loc 1 372 26 is_stmt 0 view .LVU208
 833 0028 8360     		str	r3, [r0, #8]
 373:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 834              		.loc 1 373 3 is_stmt 1 view .LVU209
 373:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 835              		.loc 1 373 21 is_stmt 0 view .LVU210
 836 002a 4FF6FF72 		movw	r2, #65535
 837 002e C260     		str	r2, [r0, #12]
 374:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 838              		.loc 1 374 3 is_stmt 1 view .LVU211
 374:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 839              		.loc 1 374 28 is_stmt 0 view .LVU212
 840 0030 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 45


 375:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 841              		.loc 1 375 3 is_stmt 1 view .LVU213
 375:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 842              		.loc 1 375 32 is_stmt 0 view .LVU214
 843 0032 8361     		str	r3, [r0, #24]
 376:Core/Src/main.c ****   {
 844              		.loc 1 376 3 is_stmt 1 view .LVU215
 376:Core/Src/main.c ****   {
 845              		.loc 1 376 7 is_stmt 0 view .LVU216
 846 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 847              	.LVL47:
 376:Core/Src/main.c ****   {
 848              		.loc 1 376 6 discriminator 1 view .LVU217
 849 0038 28BB     		cbnz	r0, .L49
 380:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 850              		.loc 1 380 3 is_stmt 1 view .LVU218
 380:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 851              		.loc 1 380 34 is_stmt 0 view .LVU219
 852 003a 4FF48053 		mov	r3, #4096
 853 003e 0A93     		str	r3, [sp, #40]
 381:Core/Src/main.c ****   {
 854              		.loc 1 381 3 is_stmt 1 view .LVU220
 381:Core/Src/main.c ****   {
 855              		.loc 1 381 7 is_stmt 0 view .LVU221
 856 0040 0AA9     		add	r1, sp, #40
 857 0042 1648     		ldr	r0, .L54
 858 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 859              	.LVL48:
 381:Core/Src/main.c ****   {
 860              		.loc 1 381 6 discriminator 1 view .LVU222
 861 0048 F8B9     		cbnz	r0, .L50
 385:Core/Src/main.c ****   {
 862              		.loc 1 385 3 is_stmt 1 view .LVU223
 385:Core/Src/main.c ****   {
 863              		.loc 1 385 7 is_stmt 0 view .LVU224
 864 004a 1448     		ldr	r0, .L54
 865 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 866              	.LVL49:
 385:Core/Src/main.c ****   {
 867              		.loc 1 385 6 discriminator 1 view .LVU225
 868 0050 E8B9     		cbnz	r0, .L51
 389:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 869              		.loc 1 389 3 is_stmt 1 view .LVU226
 389:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 870              		.loc 1 389 37 is_stmt 0 view .LVU227
 871 0052 0023     		movs	r3, #0
 872 0054 0893     		str	r3, [sp, #32]
 390:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 873              		.loc 1 390 3 is_stmt 1 view .LVU228
 390:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 874              		.loc 1 390 33 is_stmt 0 view .LVU229
 875 0056 0993     		str	r3, [sp, #36]
 391:Core/Src/main.c ****   {
 876              		.loc 1 391 3 is_stmt 1 view .LVU230
 391:Core/Src/main.c ****   {
 877              		.loc 1 391 7 is_stmt 0 view .LVU231
 878 0058 08A9     		add	r1, sp, #32
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 46


 879 005a 1048     		ldr	r0, .L54
 880 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 881              	.LVL50:
 391:Core/Src/main.c ****   {
 882              		.loc 1 391 6 discriminator 1 view .LVU232
 883 0060 B8B9     		cbnz	r0, .L52
 395:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 884              		.loc 1 395 3 is_stmt 1 view .LVU233
 395:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 885              		.loc 1 395 20 is_stmt 0 view .LVU234
 886 0062 6023     		movs	r3, #96
 887 0064 0193     		str	r3, [sp, #4]
 396:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 888              		.loc 1 396 3 is_stmt 1 view .LVU235
 396:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 889              		.loc 1 396 19 is_stmt 0 view .LVU236
 890 0066 0023     		movs	r3, #0
 891 0068 0293     		str	r3, [sp, #8]
 397:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 892              		.loc 1 397 3 is_stmt 1 view .LVU237
 397:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 893              		.loc 1 397 24 is_stmt 0 view .LVU238
 894 006a 0393     		str	r3, [sp, #12]
 398:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 895              		.loc 1 398 3 is_stmt 1 view .LVU239
 398:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 896              		.loc 1 398 24 is_stmt 0 view .LVU240
 897 006c 0593     		str	r3, [sp, #20]
 399:Core/Src/main.c ****   {
 898              		.loc 1 399 3 is_stmt 1 view .LVU241
 399:Core/Src/main.c ****   {
 899              		.loc 1 399 7 is_stmt 0 view .LVU242
 900 006e 0822     		movs	r2, #8
 901 0070 01A9     		add	r1, sp, #4
 902 0072 0A48     		ldr	r0, .L54
 903 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 904              	.LVL51:
 399:Core/Src/main.c ****   {
 905              		.loc 1 399 6 discriminator 1 view .LVU243
 906 0078 68B9     		cbnz	r0, .L53
 406:Core/Src/main.c **** 
 907              		.loc 1 406 3 is_stmt 1 view .LVU244
 908 007a 0848     		ldr	r0, .L54
 909 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 910              	.LVL52:
 408:Core/Src/main.c **** 
 911              		.loc 1 408 1 is_stmt 0 view .LVU245
 912 0080 0FB0     		add	sp, sp, #60
 913              	.LCFI13:
 914              		.cfi_remember_state
 915              		.cfi_def_cfa_offset 4
 916              		@ sp needed
 917 0082 5DF804FB 		ldr	pc, [sp], #4
 918              	.L49:
 919              	.LCFI14:
 920              		.cfi_restore_state
 378:Core/Src/main.c ****   }
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 47


 921              		.loc 1 378 5 is_stmt 1 view .LVU246
 922 0086 FFF7FEFF 		bl	Error_Handler
 923              	.LVL53:
 924              	.L50:
 383:Core/Src/main.c ****   }
 925              		.loc 1 383 5 view .LVU247
 926 008a FFF7FEFF 		bl	Error_Handler
 927              	.LVL54:
 928              	.L51:
 387:Core/Src/main.c ****   }
 929              		.loc 1 387 5 view .LVU248
 930 008e FFF7FEFF 		bl	Error_Handler
 931              	.LVL55:
 932              	.L52:
 393:Core/Src/main.c ****   }
 933              		.loc 1 393 5 view .LVU249
 934 0092 FFF7FEFF 		bl	Error_Handler
 935              	.LVL56:
 936              	.L53:
 401:Core/Src/main.c ****   }
 937              		.loc 1 401 5 view .LVU250
 938 0096 FFF7FEFF 		bl	Error_Handler
 939              	.LVL57:
 940              	.L55:
 941 009a 00BF     		.align	2
 942              	.L54:
 943 009c 00000000 		.word	htim3
 944 00a0 00040040 		.word	1073742848
 945              		.cfi_endproc
 946              	.LFE140:
 948              		.section	.text.SystemClock_Config,"ax",%progbits
 949              		.align	1
 950              		.global	SystemClock_Config
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 955              	SystemClock_Config:
 956              	.LFB138:
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 957              		.loc 1 237 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 80
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961 0000 00B5     		push	{lr}
 962              	.LCFI15:
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 14, -4
 965 0002 95B0     		sub	sp, sp, #84
 966              	.LCFI16:
 967              		.cfi_def_cfa_offset 88
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 968              		.loc 1 238 3 view .LVU252
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 969              		.loc 1 238 22 is_stmt 0 view .LVU253
 970 0004 3422     		movs	r2, #52
 971 0006 0021     		movs	r1, #0
 972 0008 07A8     		add	r0, sp, #28
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 48


 973 000a FFF7FEFF 		bl	memset
 974              	.LVL58:
 239:Core/Src/main.c **** 
 975              		.loc 1 239 3 is_stmt 1 view .LVU254
 239:Core/Src/main.c **** 
 976              		.loc 1 239 22 is_stmt 0 view .LVU255
 977 000e 0023     		movs	r3, #0
 978 0010 0293     		str	r3, [sp, #8]
 979 0012 0393     		str	r3, [sp, #12]
 980 0014 0493     		str	r3, [sp, #16]
 981 0016 0593     		str	r3, [sp, #20]
 982 0018 0693     		str	r3, [sp, #24]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 983              		.loc 1 243 3 is_stmt 1 view .LVU256
 984              	.LBB11:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 985              		.loc 1 243 3 view .LVU257
 986 001a 0093     		str	r3, [sp]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 987              		.loc 1 243 3 view .LVU258
 988 001c 194A     		ldr	r2, .L62
 989 001e 116C     		ldr	r1, [r2, #64]
 990 0020 41F08051 		orr	r1, r1, #268435456
 991 0024 1164     		str	r1, [r2, #64]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 992              		.loc 1 243 3 view .LVU259
 993 0026 126C     		ldr	r2, [r2, #64]
 994 0028 02F08052 		and	r2, r2, #268435456
 995 002c 0092     		str	r2, [sp]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 996              		.loc 1 243 3 view .LVU260
 997 002e 009A     		ldr	r2, [sp]
 998              	.LBE11:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 999              		.loc 1 243 3 view .LVU261
 244:Core/Src/main.c **** 
 1000              		.loc 1 244 3 view .LVU262
 1001              	.LBB12:
 244:Core/Src/main.c **** 
 1002              		.loc 1 244 3 view .LVU263
 1003 0030 0193     		str	r3, [sp, #4]
 244:Core/Src/main.c **** 
 1004              		.loc 1 244 3 view .LVU264
 1005 0032 1549     		ldr	r1, .L62+4
 1006 0034 0A68     		ldr	r2, [r1]
 1007 0036 22F44042 		bic	r2, r2, #49152
 1008 003a 42F48042 		orr	r2, r2, #16384
 1009 003e 0A60     		str	r2, [r1]
 244:Core/Src/main.c **** 
 1010              		.loc 1 244 3 view .LVU265
 1011 0040 0A68     		ldr	r2, [r1]
 1012 0042 02F44042 		and	r2, r2, #49152
 1013 0046 0192     		str	r2, [sp, #4]
 244:Core/Src/main.c **** 
 1014              		.loc 1 244 3 view .LVU266
 1015 0048 019A     		ldr	r2, [sp, #4]
 1016              	.LBE12:
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 49


 244:Core/Src/main.c **** 
 1017              		.loc 1 244 3 view .LVU267
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1018              		.loc 1 249 3 view .LVU268
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1019              		.loc 1 249 36 is_stmt 0 view .LVU269
 1020 004a 0222     		movs	r2, #2
 1021 004c 0792     		str	r2, [sp, #28]
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1022              		.loc 1 250 3 is_stmt 1 view .LVU270
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1023              		.loc 1 250 30 is_stmt 0 view .LVU271
 1024 004e 0122     		movs	r2, #1
 1025 0050 0A92     		str	r2, [sp, #40]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1026              		.loc 1 251 3 is_stmt 1 view .LVU272
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1027              		.loc 1 251 41 is_stmt 0 view .LVU273
 1028 0052 1022     		movs	r2, #16
 1029 0054 0B92     		str	r2, [sp, #44]
 252:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1030              		.loc 1 252 3 is_stmt 1 view .LVU274
 252:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1031              		.loc 1 252 34 is_stmt 0 view .LVU275
 1032 0056 0D93     		str	r3, [sp, #52]
 253:Core/Src/main.c ****   {
 1033              		.loc 1 253 3 is_stmt 1 view .LVU276
 253:Core/Src/main.c ****   {
 1034              		.loc 1 253 7 is_stmt 0 view .LVU277
 1035 0058 07A8     		add	r0, sp, #28
 1036 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1037              	.LVL59:
 253:Core/Src/main.c ****   {
 1038              		.loc 1 253 6 discriminator 1 view .LVU278
 1039 005e 68B9     		cbnz	r0, .L60
 260:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1040              		.loc 1 260 3 is_stmt 1 view .LVU279
 260:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1041              		.loc 1 260 31 is_stmt 0 view .LVU280
 1042 0060 0F23     		movs	r3, #15
 1043 0062 0293     		str	r3, [sp, #8]
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1044              		.loc 1 262 3 is_stmt 1 view .LVU281
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1045              		.loc 1 262 34 is_stmt 0 view .LVU282
 1046 0064 0021     		movs	r1, #0
 1047 0066 0391     		str	r1, [sp, #12]
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1048              		.loc 1 263 3 is_stmt 1 view .LVU283
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1049              		.loc 1 263 35 is_stmt 0 view .LVU284
 1050 0068 0491     		str	r1, [sp, #16]
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1051              		.loc 1 264 3 is_stmt 1 view .LVU285
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1052              		.loc 1 264 36 is_stmt 0 view .LVU286
 1053 006a 0591     		str	r1, [sp, #20]
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 50


 265:Core/Src/main.c **** 
 1054              		.loc 1 265 3 is_stmt 1 view .LVU287
 265:Core/Src/main.c **** 
 1055              		.loc 1 265 36 is_stmt 0 view .LVU288
 1056 006c 0691     		str	r1, [sp, #24]
 267:Core/Src/main.c ****   {
 1057              		.loc 1 267 3 is_stmt 1 view .LVU289
 267:Core/Src/main.c ****   {
 1058              		.loc 1 267 7 is_stmt 0 view .LVU290
 1059 006e 02A8     		add	r0, sp, #8
 1060 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1061              	.LVL60:
 267:Core/Src/main.c ****   {
 1062              		.loc 1 267 6 discriminator 1 view .LVU291
 1063 0074 20B9     		cbnz	r0, .L61
 271:Core/Src/main.c **** 
 1064              		.loc 1 271 1 view .LVU292
 1065 0076 15B0     		add	sp, sp, #84
 1066              	.LCFI17:
 1067              		.cfi_remember_state
 1068              		.cfi_def_cfa_offset 4
 1069              		@ sp needed
 1070 0078 5DF804FB 		ldr	pc, [sp], #4
 1071              	.L60:
 1072              	.LCFI18:
 1073              		.cfi_restore_state
 255:Core/Src/main.c ****   }
 1074              		.loc 1 255 5 is_stmt 1 view .LVU293
 1075 007c FFF7FEFF 		bl	Error_Handler
 1076              	.LVL61:
 1077              	.L61:
 269:Core/Src/main.c ****   }
 1078              		.loc 1 269 5 view .LVU294
 1079 0080 FFF7FEFF 		bl	Error_Handler
 1080              	.LVL62:
 1081              	.L63:
 1082              		.align	2
 1083              	.L62:
 1084 0084 00380240 		.word	1073887232
 1085 0088 00700040 		.word	1073770496
 1086              		.cfi_endproc
 1087              	.LFE138:
 1089              		.section	.text.main,"ax",%progbits
 1090              		.align	1
 1091              		.global	main
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1096              	main:
 1097              	.LFB137:
 179:Core/Src/main.c **** 
 1098              		.loc 1 179 1 view -0
 1099              		.cfi_startproc
 1100              		@ Volatile: function does not return.
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 51


 1104              	.LCFI19:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 3, -8
 1107              		.cfi_offset 14, -4
 188:Core/Src/main.c **** 
 1108              		.loc 1 188 3 view .LVU296
 1109 0002 FFF7FEFF 		bl	HAL_Init
 1110              	.LVL63:
 195:Core/Src/main.c **** 
 1111              		.loc 1 195 3 view .LVU297
 1112 0006 FFF7FEFF 		bl	SystemClock_Config
 1113              	.LVL64:
 202:Core/Src/main.c ****   MX_DMA_Init();
 1114              		.loc 1 202 3 view .LVU298
 1115 000a FFF7FEFF 		bl	MX_GPIO_Init
 1116              	.LVL65:
 203:Core/Src/main.c ****   MX_TIM2_Init();
 1117              		.loc 1 203 3 view .LVU299
 1118 000e FFF7FEFF 		bl	MX_DMA_Init
 1119              	.LVL66:
 204:Core/Src/main.c ****   MX_TIM3_Init();
 1120              		.loc 1 204 3 view .LVU300
 1121 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1122              	.LVL67:
 205:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1123              		.loc 1 205 3 view .LVU301
 1124 0016 FFF7FEFF 		bl	MX_TIM3_Init
 1125              	.LVL68:
 208:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 1126              		.loc 1 208 3 view .LVU302
 1127 001a 0821     		movs	r1, #8
 1128 001c 0E48     		ldr	r0, .L67
 1129 001e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1130              	.LVL69:
 210:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 1131              		.loc 1 210 3 view .LVU303
 1132 0022 0E4C     		ldr	r4, .L67+4
 1133 0024 0021     		movs	r1, #0
 1134 0026 2046     		mov	r0, r4
 1135 0028 FFF7FEFF 		bl	HAL_TIM_OC_Start
 1136              	.LVL70:
 212:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 1137              		.loc 1 212 3 view .LVU304
 1138 002c 8023     		movs	r3, #128
 1139 002e 0C4A     		ldr	r2, .L67+8
 1140 0030 1268     		ldr	r2, [r2]
 1141 0032 0C49     		ldr	r1, .L67+12
 1142 0034 0C48     		ldr	r0, .L67+16
 1143 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1144              	.LVL71:
 214:Core/Src/main.c ****   lcd_command(CLEAR);
 1145              		.loc 1 214 3 view .LVU305
 1146 003a FFF7FEFF 		bl	init_LCD
 1147              	.LVL72:
 215:Core/Src/main.c ****   lcd_putstring("Sine");
 1148              		.loc 1 215 3 view .LVU306
 1149 003e 0120     		movs	r0, #1
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 52


 1150 0040 FFF7FEFF 		bl	lcd_command
 1151              	.LVL73:
 216:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 1152              		.loc 1 216 3 view .LVU307
 1153 0044 0948     		ldr	r0, .L67+20
 1154 0046 FFF7FEFF 		bl	lcd_putstring
 1155              	.LVL74:
 218:Core/Src/main.c ****   /* USER CODE END 2 */
 1156              		.loc 1 218 3 view .LVU308
 1157 004a 2268     		ldr	r2, [r4]
 1158 004c D368     		ldr	r3, [r2, #12]
 1159 004e 43F40073 		orr	r3, r3, #512
 1160 0052 D360     		str	r3, [r2, #12]
 1161              	.L65:
 223:Core/Src/main.c ****   {
 1162              		.loc 1 223 3 view .LVU309
 228:Core/Src/main.c ****   /* USER CODE END 3 */
 1163              		.loc 1 228 3 view .LVU310
 223:Core/Src/main.c ****   {
 1164              		.loc 1 223 9 view .LVU311
 1165 0054 FEE7     		b	.L65
 1166              	.L68:
 1167 0056 00BF     		.align	2
 1168              	.L67:
 1169 0058 00000000 		.word	htim3
 1170 005c 00000000 		.word	htim2
 1171 0060 00000000 		.word	DestAddress
 1172 0064 00000000 		.word	Sin_LUT
 1173 0068 00000000 		.word	hdma_tim2_ch1
 1174 006c 00000000 		.word	.LC0
 1175              		.cfi_endproc
 1176              	.LFE137:
 1178              		.section	.bss.last_interrupt_time.0,"aw",%nobits
 1179              		.align	2
 1182              	last_interrupt_time.0:
 1183 0000 00000000 		.space	4
 1184              		.global	current_waveform
 1185              		.section	.bss.current_waveform,"aw",%nobits
 1188              	current_waveform:
 1189 0000 00       		.space	1
 1190              		.global	DestAddress
 1191              		.section	.data.DestAddress,"aw"
 1192              		.align	2
 1195              	DestAddress:
 1196 0000 3C040040 		.word	1073742908
 1197              		.global	hdma_tim2_ch1
 1198              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1199              		.align	2
 1202              	hdma_tim2_ch1:
 1203 0000 00000000 		.space	96
 1203      00000000 
 1203      00000000 
 1203      00000000 
 1203      00000000 
 1204              		.global	htim3
 1205              		.section	.bss.htim3,"aw",%nobits
 1206              		.align	2
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 53


 1209              	htim3:
 1210 0000 00000000 		.space	72
 1210      00000000 
 1210      00000000 
 1210      00000000 
 1210      00000000 
 1211              		.global	htim2
 1212              		.section	.bss.htim2,"aw",%nobits
 1213              		.align	2
 1216              	htim2:
 1217 0000 00000000 		.space	72
 1217      00000000 
 1217      00000000 
 1217      00000000 
 1217      00000000 
 1218              		.global	Sin_LUT
 1219              		.section	.data.Sin_LUT,"aw"
 1220              		.align	2
 1223              	Sin_LUT:
 1224 0000 00080000 		.word	2048
 1225 0004 64080000 		.word	2148
 1226 0008 C8080000 		.word	2248
 1227 000c 2C090000 		.word	2348
 1228 0010 8F090000 		.word	2447
 1229 0014 F1090000 		.word	2545
 1230 0018 520A0000 		.word	2642
 1231 001c B10A0000 		.word	2737
 1232 0020 0F0B0000 		.word	2831
 1233 0024 6B0B0000 		.word	2923
 1234 0028 C50B0000 		.word	3013
 1235 002c 1C0C0000 		.word	3100
 1236 0030 710C0000 		.word	3185
 1237 0034 C30C0000 		.word	3267
 1238 0038 120D0000 		.word	3346
 1239 003c 5F0D0000 		.word	3423
 1240 0040 A70D0000 		.word	3495
 1241 0044 ED0D0000 		.word	3565
 1242 0048 2E0E0000 		.word	3630
 1243 004c 6C0E0000 		.word	3692
 1244 0050 A60E0000 		.word	3750
 1245 0054 DC0E0000 		.word	3804
 1246 0058 0D0F0000 		.word	3853
 1247 005c 3A0F0000 		.word	3898
 1248 0060 630F0000 		.word	3939
 1249 0064 870F0000 		.word	3975
 1250 0068 A70F0000 		.word	4007
 1251 006c C20F0000 		.word	4034
 1252 0070 D80F0000 		.word	4056
 1253 0074 E90F0000 		.word	4073
 1254 0078 F50F0000 		.word	4085
 1255 007c FD0F0000 		.word	4093
 1256 0080 FF0F0000 		.word	4095
 1257 0084 FD0F0000 		.word	4093
 1258 0088 F50F0000 		.word	4085
 1259 008c E90F0000 		.word	4073
 1260 0090 D80F0000 		.word	4056
 1261 0094 C20F0000 		.word	4034
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 54


 1262 0098 A70F0000 		.word	4007
 1263 009c 870F0000 		.word	3975
 1264 00a0 630F0000 		.word	3939
 1265 00a4 3A0F0000 		.word	3898
 1266 00a8 0D0F0000 		.word	3853
 1267 00ac DC0E0000 		.word	3804
 1268 00b0 A60E0000 		.word	3750
 1269 00b4 6C0E0000 		.word	3692
 1270 00b8 2E0E0000 		.word	3630
 1271 00bc ED0D0000 		.word	3565
 1272 00c0 A70D0000 		.word	3495
 1273 00c4 5F0D0000 		.word	3423
 1274 00c8 120D0000 		.word	3346
 1275 00cc C30C0000 		.word	3267
 1276 00d0 710C0000 		.word	3185
 1277 00d4 1C0C0000 		.word	3100
 1278 00d8 C50B0000 		.word	3013
 1279 00dc 6B0B0000 		.word	2923
 1280 00e0 0F0B0000 		.word	2831
 1281 00e4 B10A0000 		.word	2737
 1282 00e8 520A0000 		.word	2642
 1283 00ec F1090000 		.word	2545
 1284 00f0 8F090000 		.word	2447
 1285 00f4 2C090000 		.word	2348
 1286 00f8 C8080000 		.word	2248
 1287 00fc 64080000 		.word	2148
 1288 0100 00080000 		.word	2048
 1289 0104 9B070000 		.word	1947
 1290 0108 37070000 		.word	1847
 1291 010c D3060000 		.word	1747
 1292 0110 70060000 		.word	1648
 1293 0114 0E060000 		.word	1550
 1294 0118 AD050000 		.word	1453
 1295 011c 4E050000 		.word	1358
 1296 0120 F0040000 		.word	1264
 1297 0124 94040000 		.word	1172
 1298 0128 3A040000 		.word	1082
 1299 012c E3030000 		.word	995
 1300 0130 8E030000 		.word	910
 1301 0134 3C030000 		.word	828
 1302 0138 ED020000 		.word	749
 1303 013c A0020000 		.word	672
 1304 0140 58020000 		.word	600
 1305 0144 12020000 		.word	530
 1306 0148 D1010000 		.word	465
 1307 014c 93010000 		.word	403
 1308 0150 59010000 		.word	345
 1309 0154 23010000 		.word	291
 1310 0158 F2000000 		.word	242
 1311 015c C5000000 		.word	197
 1312 0160 9C000000 		.word	156
 1313 0164 78000000 		.word	120
 1314 0168 58000000 		.word	88
 1315 016c 3D000000 		.word	61
 1316 0170 27000000 		.word	39
 1317 0174 16000000 		.word	22
 1318 0178 0A000000 		.word	10
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 55


 1319 017c 02000000 		.word	2
 1320 0180 00000000 		.word	0
 1321 0184 02000000 		.word	2
 1322 0188 0A000000 		.word	10
 1323 018c 16000000 		.word	22
 1324 0190 27000000 		.word	39
 1325 0194 3D000000 		.word	61
 1326 0198 58000000 		.word	88
 1327 019c 78000000 		.word	120
 1328 01a0 9C000000 		.word	156
 1329 01a4 C5000000 		.word	197
 1330 01a8 F2000000 		.word	242
 1331 01ac 23010000 		.word	291
 1332 01b0 59010000 		.word	345
 1333 01b4 93010000 		.word	403
 1334 01b8 D1010000 		.word	465
 1335 01bc 12020000 		.word	530
 1336 01c0 58020000 		.word	600
 1337 01c4 A0020000 		.word	672
 1338 01c8 ED020000 		.word	749
 1339 01cc 3C030000 		.word	828
 1340 01d0 8E030000 		.word	910
 1341 01d4 E3030000 		.word	995
 1342 01d8 3A040000 		.word	1082
 1343 01dc 94040000 		.word	1172
 1344 01e0 F0040000 		.word	1264
 1345 01e4 4E050000 		.word	1358
 1346 01e8 AD050000 		.word	1453
 1347 01ec 0E060000 		.word	1550
 1348 01f0 70060000 		.word	1648
 1349 01f4 D3060000 		.word	1747
 1350 01f8 37070000 		.word	1847
 1351 01fc 9B070000 		.word	1947
 1352              		.global	Drum_LUT
 1353              		.section	.data.Drum_LUT,"aw"
 1354              		.align	2
 1357              	Drum_LUT:
 1358 0000 FF070000 		.word	2047
 1359 0004 120D0000 		.word	3346
 1360 0008 5B070000 		.word	1883
 1361 000c 48080000 		.word	2120
 1362 0010 15080000 		.word	2069
 1363 0014 340D0000 		.word	3380
 1364 0018 7A070000 		.word	1914
 1365 001c 98070000 		.word	1944
 1366 0020 27080000 		.word	2087
 1367 0024 C0090000 		.word	2496
 1368 0028 EC070000 		.word	2028
 1369 002c EC070000 		.word	2028
 1370 0030 F3070000 		.word	2035
 1371 0034 DD070000 		.word	2013
 1372 0038 B5050000 		.word	1461
 1373 003c 3C070000 		.word	1852
 1374 0040 2A080000 		.word	2090
 1375 0044 E8070000 		.word	2024
 1376 0048 FF070000 		.word	2047
 1377 004c 0C080000 		.word	2060
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 56


 1378 0050 00080000 		.word	2048
 1379 0054 24080000 		.word	2084
 1380 0058 FB070000 		.word	2043
 1381 005c EB070000 		.word	2027
 1382 0060 57080000 		.word	2135
 1383 0064 39070000 		.word	1849
 1384 0068 12080000 		.word	2066
 1385 006c 04080000 		.word	2052
 1386 0070 85080000 		.word	2181
 1387 0074 F2070000 		.word	2034
 1388 0078 B80B0000 		.word	3000
 1389 007c EC040000 		.word	1260
 1390 0080 CD050000 		.word	1485
 1391 0084 38080000 		.word	2104
 1392 0088 7E090000 		.word	2430
 1393 008c 3A080000 		.word	2106
 1394 0090 F8060000 		.word	1784
 1395 0094 06080000 		.word	2054
 1396 0098 ED070000 		.word	2029
 1397 009c F7070000 		.word	2039
 1398 00a0 FA0F0000 		.word	4090
 1399 00a4 65070000 		.word	1893
 1400 00a8 F6070000 		.word	2038
 1401 00ac F9070000 		.word	2041
 1402 00b0 01090000 		.word	2305
 1403 00b4 E0080000 		.word	2272
 1404 00b8 13070000 		.word	1811
 1405 00bc CD070000 		.word	1997
 1406 00c0 7D080000 		.word	2173
 1407 00c4 0D080000 		.word	2061
 1408 00c8 DD070000 		.word	2013
 1409 00cc 00080000 		.word	2048
 1410 00d0 FC020000 		.word	764
 1411 00d4 6E090000 		.word	2414
 1412 00d8 24080000 		.word	2084
 1413 00dc 1A080000 		.word	2074
 1414 00e0 21000000 		.word	33
 1415 00e4 B1080000 		.word	2225
 1416 00e8 F1070000 		.word	2033
 1417 00ec EA070000 		.word	2026
 1418 00f0 75080000 		.word	2165
 1419 00f4 02080000 		.word	2050
 1420 00f8 5F0B0000 		.word	2911
 1421 00fc 58090000 		.word	2392
 1422 0100 F10F0000 		.word	4081
 1423 0104 C1070000 		.word	1985
 1424 0108 E5080000 		.word	2277
 1425 010c F1070000 		.word	2033
 1426 0110 420A0000 		.word	2626
 1427 0114 850A0000 		.word	2693
 1428 0118 0D080000 		.word	2061
 1429 011c 34080000 		.word	2100
 1430 0120 06070000 		.word	1798
 1431 0124 DD070000 		.word	2013
 1432 0128 28080000 		.word	2088
 1433 012c FE070000 		.word	2046
 1434 0130 7E0A0000 		.word	2686
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 57


 1435 0134 6D070000 		.word	1901
 1436 0138 01080000 		.word	2049
 1437 013c 1A080000 		.word	2074
 1438 0140 D5070000 		.word	2005
 1439 0144 09080000 		.word	2057
 1440 0148 F7070000 		.word	2039
 1441 014c FF070000 		.word	2047
 1442 0150 87080000 		.word	2183
 1443 0154 08080000 		.word	2056
 1444 0158 13080000 		.word	2067
 1445 015c FF070000 		.word	2047
 1446 0160 520B0000 		.word	2898
 1447 0164 0F080000 		.word	2063
 1448 0168 E4070000 		.word	2020
 1449 016c 1D080000 		.word	2077
 1450 0170 D4070000 		.word	2004
 1451 0174 06080000 		.word	2054
 1452 0178 F0060000 		.word	1776
 1453 017c F5070000 		.word	2037
 1454 0180 17030000 		.word	791
 1455 0184 E7080000 		.word	2279
 1456 0188 B1070000 		.word	1969
 1457 018c F3070000 		.word	2035
 1458 0190 F9070000 		.word	2041
 1459 0194 F9070000 		.word	2041
 1460 0198 28080000 		.word	2088
 1461 019c F8070000 		.word	2040
 1462 01a0 AA060000 		.word	1706
 1463 01a4 0A080000 		.word	2058
 1464 01a8 0E080000 		.word	2062
 1465 01ac EE070000 		.word	2030
 1466 01b0 02080000 		.word	2050
 1467 01b4 69090000 		.word	2409
 1468 01b8 63080000 		.word	2147
 1469 01bc B8080000 		.word	2232
 1470 01c0 4E080000 		.word	2126
 1471 01c4 FC070000 		.word	2044
 1472 01c8 F7070000 		.word	2039
 1473 01cc BF060000 		.word	1727
 1474 01d0 62080000 		.word	2146
 1475 01d4 69090000 		.word	2409
 1476 01d8 54080000 		.word	2132
 1477 01dc FE0F0000 		.word	4094
 1478 01e0 65080000 		.word	2149
 1479 01e4 DB070000 		.word	2011
 1480 01e8 FA070000 		.word	2042
 1481 01ec 61060000 		.word	1633
 1482 01f0 B2070000 		.word	1970
 1483 01f4 01020000 		.word	513
 1484 01f8 D8090000 		.word	2520
 1485 01fc FF070000 		.word	2047
 1486              		.global	Guitar_LUT
 1487              		.section	.data.Guitar_LUT,"aw"
 1488              		.align	2
 1491              	Guitar_LUT:
 1492 0000 FF070000 		.word	2047
 1493 0004 C9080000 		.word	2249
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 58


 1494 0008 3D090000 		.word	2365
 1495 000c 71080000 		.word	2161
 1496 0010 D8080000 		.word	2264
 1497 0014 97070000 		.word	1943
 1498 0018 3F070000 		.word	1855
 1499 001c C3080000 		.word	2243
 1500 0020 CA070000 		.word	1994
 1501 0024 42080000 		.word	2114
 1502 0028 13080000 		.word	2067
 1503 002c ED070000 		.word	2029
 1504 0030 13080000 		.word	2067
 1505 0034 9C080000 		.word	2204
 1506 0038 DC060000 		.word	1756
 1507 003c 0E080000 		.word	2062
 1508 0040 FA070000 		.word	2042
 1509 0044 1C080000 		.word	2076
 1510 0048 FA060000 		.word	1786
 1511 004c A6090000 		.word	2470
 1512 0050 88070000 		.word	1928
 1513 0054 89070000 		.word	1929
 1514 0058 D0090000 		.word	2512
 1515 005c 39070000 		.word	1849
 1516 0060 E7060000 		.word	1767
 1517 0064 F9070000 		.word	2041
 1518 0068 E4070000 		.word	2020
 1519 006c 05080000 		.word	2053
 1520 0070 F5070000 		.word	2037
 1521 0074 EA070000 		.word	2026
 1522 0078 A6070000 		.word	1958
 1523 007c 0B080000 		.word	2059
 1524 0080 04080000 		.word	2052
 1525 0084 C7070000 		.word	1991
 1526 0088 D7070000 		.word	2007
 1527 008c 58080000 		.word	2136
 1528 0090 58070000 		.word	1880
 1529 0094 80080000 		.word	2176
 1530 0098 C0070000 		.word	1984
 1531 009c F2070000 		.word	2034
 1532 00a0 64070000 		.word	1892
 1533 00a4 0F080000 		.word	2063
 1534 00a8 0D080000 		.word	2061
 1535 00ac 0D080000 		.word	2061
 1536 00b0 07080000 		.word	2055
 1537 00b4 8C070000 		.word	1932
 1538 00b8 59080000 		.word	2137
 1539 00bc F9070000 		.word	2041
 1540 00c0 6D070000 		.word	1901
 1541 00c4 72070000 		.word	1906
 1542 00c8 EB080000 		.word	2283
 1543 00cc 4A070000 		.word	1866
 1544 00d0 07090000 		.word	2311
 1545 00d4 AC070000 		.word	1964
 1546 00d8 5F070000 		.word	1887
 1547 00dc 0F090000 		.word	2319
 1548 00e0 C9070000 		.word	1993
 1549 00e4 6F080000 		.word	2159
 1550 00e8 26080000 		.word	2086
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 59


 1551 00ec F6060000 		.word	1782
 1552 00f0 BC070000 		.word	1980
 1553 00f4 5D080000 		.word	2141
 1554 00f8 1D0B0000 		.word	2845
 1555 00fc DE070000 		.word	2014
 1556 0100 54070000 		.word	1876
 1557 0104 49080000 		.word	2121
 1558 0108 5E080000 		.word	2142
 1559 010c D0080000 		.word	2256
 1560 0110 AD080000 		.word	2221
 1561 0114 4B090000 		.word	2379
 1562 0118 92060000 		.word	1682
 1563 011c 24090000 		.word	2340
 1564 0120 29080000 		.word	2089
 1565 0124 E4070000 		.word	2020
 1566 0128 1E080000 		.word	2078
 1567 012c 0E080000 		.word	2062
 1568 0130 46090000 		.word	2374
 1569 0134 75070000 		.word	1909
 1570 0138 0D080000 		.word	2061
 1571 013c 06080000 		.word	2054
 1572 0140 6D080000 		.word	2157
 1573 0144 76080000 		.word	2166
 1574 0148 00070000 		.word	1792
 1575 014c 6A080000 		.word	2154
 1576 0150 24080000 		.word	2084
 1577 0154 86060000 		.word	1670
 1578 0158 BE070000 		.word	1982
 1579 015c C1060000 		.word	1729
 1580 0160 2F080000 		.word	2095
 1581 0164 23080000 		.word	2083
 1582 0168 F6070000 		.word	2038
 1583 016c F2070000 		.word	2034
 1584 0170 A8070000 		.word	1960
 1585 0174 7E070000 		.word	1918
 1586 0178 2A080000 		.word	2090
 1587 017c FE070000 		.word	2046
 1588 0180 4B090000 		.word	2379
 1589 0184 29070000 		.word	1833
 1590 0188 30090000 		.word	2352
 1591 018c 3B070000 		.word	1851
 1592 0190 6A080000 		.word	2154
 1593 0194 45070000 		.word	1861
 1594 0198 4A090000 		.word	2378
 1595 019c A5090000 		.word	2469
 1596 01a0 C3070000 		.word	1987
 1597 01a4 01080000 		.word	2049
 1598 01a8 E1070000 		.word	2017
 1599 01ac 05080000 		.word	2053
 1600 01b0 5A080000 		.word	2138
 1601 01b4 73070000 		.word	1907
 1602 01b8 07080000 		.word	2055
 1603 01bc FE070000 		.word	2046
 1604 01c0 8D060000 		.word	1677
 1605 01c4 87080000 		.word	2183
 1606 01c8 03080000 		.word	2051
 1607 01cc D7070000 		.word	2007
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 60


 1608 01d0 C1080000 		.word	2241
 1609 01d4 CF070000 		.word	1999
 1610 01d8 D3070000 		.word	2003
 1611 01dc C8060000 		.word	1736
 1612 01e0 28080000 		.word	2088
 1613 01e4 FA060000 		.word	1786
 1614 01e8 40090000 		.word	2368
 1615 01ec 8F070000 		.word	1935
 1616 01f0 9F060000 		.word	1695
 1617 01f4 230A0000 		.word	2595
 1618 01f8 11080000 		.word	2065
 1619 01fc FD070000 		.word	2045
 1620              		.global	Piano_LUT
 1621              		.section	.data.Piano_LUT,"aw"
 1622              		.align	2
 1625              	Piano_LUT:
 1626 0000 FF070000 		.word	2047
 1627 0004 74080000 		.word	2164
 1628 0008 BC070000 		.word	1980
 1629 000c 34080000 		.word	2100
 1630 0010 0A080000 		.word	2058
 1631 0014 1E080000 		.word	2078
 1632 0018 FC070000 		.word	2044
 1633 001c 5B080000 		.word	2139
 1634 0020 0E080000 		.word	2062
 1635 0024 1D080000 		.word	2077
 1636 0028 13080000 		.word	2067
 1637 002c 03080000 		.word	2051
 1638 0030 D8070000 		.word	2008
 1639 0034 64090000 		.word	2404
 1640 0038 19080000 		.word	2073
 1641 003c E8060000 		.word	1768
 1642 0040 FA070000 		.word	2042
 1643 0044 FD070000 		.word	2045
 1644 0048 DC070000 		.word	2012
 1645 004c 0A080000 		.word	2058
 1646 0050 D3070000 		.word	2003
 1647 0054 34080000 		.word	2100
 1648 0058 F1050000 		.word	1521
 1649 005c FC070000 		.word	2044
 1650 0060 FF080000 		.word	2303
 1651 0064 02080000 		.word	2050
 1652 0068 DA0B0000 		.word	3034
 1653 006c 33060000 		.word	1587
 1654 0070 D3060000 		.word	1747
 1655 0074 2A070000 		.word	1834
 1656 0078 F6080000 		.word	2294
 1657 007c D3080000 		.word	2259
 1658 0080 EB050000 		.word	1515
 1659 0084 9F080000 		.word	2207
 1660 0088 96070000 		.word	1942
 1661 008c 16080000 		.word	2070
 1662 0090 E8070000 		.word	2024
 1663 0094 1F080000 		.word	2079
 1664 0098 F4060000 		.word	1780
 1665 009c 6B070000 		.word	1899
 1666 00a0 9B070000 		.word	1947
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 61


 1667 00a4 0D080000 		.word	2061
 1668 00a8 B8080000 		.word	2232
 1669 00ac F8060000 		.word	1784
 1670 00b0 4E080000 		.word	2126
 1671 00b4 6D070000 		.word	1901
 1672 00b8 3B0B0000 		.word	2875
 1673 00bc FA070000 		.word	2042
 1674 00c0 2A080000 		.word	2090
 1675 00c4 11080000 		.word	2065
 1676 00c8 08080000 		.word	2056
 1677 00cc F3070000 		.word	2035
 1678 00d0 B1070000 		.word	1969
 1679 00d4 F5070000 		.word	2037
 1680 00d8 D20A0000 		.word	2770
 1681 00dc 94070000 		.word	1940
 1682 00e0 65090000 		.word	2405
 1683 00e4 EC060000 		.word	1772
 1684 00e8 91070000 		.word	1937
 1685 00ec C8070000 		.word	1992
 1686 00f0 6F040000 		.word	1135
 1687 00f4 75070000 		.word	1909
 1688 00f8 64060000 		.word	1636
 1689 00fc 03080000 		.word	2051
 1690 0100 8A060000 		.word	1674
 1691 0104 E9070000 		.word	2025
 1692 0108 77080000 		.word	2167
 1693 010c 0A080000 		.word	2058
 1694 0110 F0070000 		.word	2032
 1695 0114 DE070000 		.word	2014
 1696 0118 3F070000 		.word	1855
 1697 011c 52080000 		.word	2130
 1698 0120 B2070000 		.word	1970
 1699 0124 20080000 		.word	2080
 1700 0128 CB060000 		.word	1739
 1701 012c D2090000 		.word	2514
 1702 0130 B0080000 		.word	2224
 1703 0134 E9070000 		.word	2025
 1704 0138 30090000 		.word	2352
 1705 013c C1080000 		.word	2241
 1706 0140 06080000 		.word	2054
 1707 0144 3B080000 		.word	2107
 1708 0148 DD070000 		.word	2013
 1709 014c 09080000 		.word	2057
 1710 0150 04080000 		.word	2052
 1711 0154 F1070000 		.word	2033
 1712 0158 BD080000 		.word	2237
 1713 015c 10080000 		.word	2064
 1714 0160 1D080000 		.word	2077
 1715 0164 7E070000 		.word	1918
 1716 0168 44070000 		.word	1860
 1717 016c EE070000 		.word	2030
 1718 0170 CC070000 		.word	1996
 1719 0174 C7080000 		.word	2247
 1720 0178 01080000 		.word	2049
 1721 017c 4F080000 		.word	2127
 1722 0180 6E090000 		.word	2414
 1723 0184 EF070000 		.word	2031
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 62


 1724 0188 3D080000 		.word	2109
 1725 018c 11080000 		.word	2065
 1726 0190 24080000 		.word	2084
 1727 0194 F8070000 		.word	2040
 1728 0198 83060000 		.word	1667
 1729 019c 45070000 		.word	1861
 1730 01a0 85070000 		.word	1925
 1731 01a4 F0070000 		.word	2032
 1732 01a8 82080000 		.word	2178
 1733 01ac 50080000 		.word	2128
 1734 01b0 D9070000 		.word	2009
 1735 01b4 E4070000 		.word	2020
 1736 01b8 2E070000 		.word	1838
 1737 01bc 8C080000 		.word	2188
 1738 01c0 F5070000 		.word	2037
 1739 01c4 1E080000 		.word	2078
 1740 01c8 C1070000 		.word	1985
 1741 01cc 0A080000 		.word	2058
 1742 01d0 20080000 		.word	2080
 1743 01d4 FC070000 		.word	2044
 1744 01d8 86070000 		.word	1926
 1745 01dc 46070000 		.word	1862
 1746 01e0 58060000 		.word	1624
 1747 01e4 4F060000 		.word	1615
 1748 01e8 31080000 		.word	2097
 1749 01ec D7080000 		.word	2263
 1750 01f0 FB070000 		.word	2043
 1751 01f4 38080000 		.word	2104
 1752 01f8 A4070000 		.word	1956
 1753 01fc FF070000 		.word	2047
 1754              		.global	Triangle_LUT
 1755              		.section	.data.Triangle_LUT,"aw"
 1756              		.align	2
 1759              	Triangle_LUT:
 1760 0000 00000000 		.word	0
 1761 0004 40000000 		.word	64
 1762 0008 80000000 		.word	128
 1763 000c C0000000 		.word	192
 1764 0010 00010000 		.word	256
 1765 0014 40010000 		.word	320
 1766 0018 80010000 		.word	384
 1767 001c C0010000 		.word	448
 1768 0020 00020000 		.word	512
 1769 0024 40020000 		.word	576
 1770 0028 80020000 		.word	640
 1771 002c C0020000 		.word	704
 1772 0030 00030000 		.word	768
 1773 0034 40030000 		.word	832
 1774 0038 80030000 		.word	896
 1775 003c C0030000 		.word	960
 1776 0040 00040000 		.word	1024
 1777 0044 40040000 		.word	1088
 1778 0048 80040000 		.word	1152
 1779 004c C0040000 		.word	1216
 1780 0050 00050000 		.word	1280
 1781 0054 40050000 		.word	1344
 1782 0058 80050000 		.word	1408
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 63


 1783 005c C0050000 		.word	1472
 1784 0060 00060000 		.word	1536
 1785 0064 40060000 		.word	1600
 1786 0068 80060000 		.word	1664
 1787 006c C0060000 		.word	1728
 1788 0070 00070000 		.word	1792
 1789 0074 40070000 		.word	1856
 1790 0078 80070000 		.word	1920
 1791 007c C0070000 		.word	1984
 1792 0080 00080000 		.word	2048
 1793 0084 3F080000 		.word	2111
 1794 0088 7F080000 		.word	2175
 1795 008c BF080000 		.word	2239
 1796 0090 FF080000 		.word	2303
 1797 0094 3F090000 		.word	2367
 1798 0098 7F090000 		.word	2431
 1799 009c BF090000 		.word	2495
 1800 00a0 FF090000 		.word	2559
 1801 00a4 3F0A0000 		.word	2623
 1802 00a8 7F0A0000 		.word	2687
 1803 00ac BF0A0000 		.word	2751
 1804 00b0 FF0A0000 		.word	2815
 1805 00b4 3F0B0000 		.word	2879
 1806 00b8 7F0B0000 		.word	2943
 1807 00bc BF0B0000 		.word	3007
 1808 00c0 FF0B0000 		.word	3071
 1809 00c4 3F0C0000 		.word	3135
 1810 00c8 7F0C0000 		.word	3199
 1811 00cc BF0C0000 		.word	3263
 1812 00d0 FF0C0000 		.word	3327
 1813 00d4 3F0D0000 		.word	3391
 1814 00d8 7F0D0000 		.word	3455
 1815 00dc BF0D0000 		.word	3519
 1816 00e0 FF0D0000 		.word	3583
 1817 00e4 3F0E0000 		.word	3647
 1818 00e8 7F0E0000 		.word	3711
 1819 00ec BF0E0000 		.word	3775
 1820 00f0 FF0E0000 		.word	3839
 1821 00f4 3F0F0000 		.word	3903
 1822 00f8 7F0F0000 		.word	3967
 1823 00fc BF0F0000 		.word	4031
 1824 0100 FF0F0000 		.word	4095
 1825 0104 BF0F0000 		.word	4031
 1826 0108 7F0F0000 		.word	3967
 1827 010c 3F0F0000 		.word	3903
 1828 0110 FF0E0000 		.word	3839
 1829 0114 BF0E0000 		.word	3775
 1830 0118 7F0E0000 		.word	3711
 1831 011c 3F0E0000 		.word	3647
 1832 0120 FF0D0000 		.word	3583
 1833 0124 BF0D0000 		.word	3519
 1834 0128 7F0D0000 		.word	3455
 1835 012c 3F0D0000 		.word	3391
 1836 0130 FF0C0000 		.word	3327
 1837 0134 BF0C0000 		.word	3263
 1838 0138 7F0C0000 		.word	3199
 1839 013c 3F0C0000 		.word	3135
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 64


 1840 0140 FF0B0000 		.word	3071
 1841 0144 BF0B0000 		.word	3007
 1842 0148 7F0B0000 		.word	2943
 1843 014c 3F0B0000 		.word	2879
 1844 0150 FF0A0000 		.word	2815
 1845 0154 BF0A0000 		.word	2751
 1846 0158 7F0A0000 		.word	2687
 1847 015c 3F0A0000 		.word	2623
 1848 0160 FF090000 		.word	2559
 1849 0164 BF090000 		.word	2495
 1850 0168 7F090000 		.word	2431
 1851 016c 3F090000 		.word	2367
 1852 0170 FF080000 		.word	2303
 1853 0174 BF080000 		.word	2239
 1854 0178 7F080000 		.word	2175
 1855 017c 3F080000 		.word	2111
 1856 0180 00080000 		.word	2048
 1857 0184 C0070000 		.word	1984
 1858 0188 80070000 		.word	1920
 1859 018c 40070000 		.word	1856
 1860 0190 00070000 		.word	1792
 1861 0194 C0060000 		.word	1728
 1862 0198 80060000 		.word	1664
 1863 019c 40060000 		.word	1600
 1864 01a0 00060000 		.word	1536
 1865 01a4 C0050000 		.word	1472
 1866 01a8 80050000 		.word	1408
 1867 01ac 40050000 		.word	1344
 1868 01b0 00050000 		.word	1280
 1869 01b4 C0040000 		.word	1216
 1870 01b8 80040000 		.word	1152
 1871 01bc 40040000 		.word	1088
 1872 01c0 00040000 		.word	1024
 1873 01c4 C0030000 		.word	960
 1874 01c8 80030000 		.word	896
 1875 01cc 40030000 		.word	832
 1876 01d0 00030000 		.word	768
 1877 01d4 C0020000 		.word	704
 1878 01d8 80020000 		.word	640
 1879 01dc 40020000 		.word	576
 1880 01e0 00020000 		.word	512
 1881 01e4 C0010000 		.word	448
 1882 01e8 80010000 		.word	384
 1883 01ec 40010000 		.word	320
 1884 01f0 00010000 		.word	256
 1885 01f4 C0000000 		.word	192
 1886 01f8 80000000 		.word	128
 1887 01fc 40000000 		.word	64
 1888              		.global	Saw_LUT
 1889              		.section	.data.Saw_LUT,"aw"
 1890              		.align	2
 1893              	Saw_LUT:
 1894 0000 00000000 		.word	0
 1895 0004 20000000 		.word	32
 1896 0008 40000000 		.word	64
 1897 000c 61000000 		.word	97
 1898 0010 81000000 		.word	129
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 65


 1899 0014 A1000000 		.word	161
 1900 0018 C1000000 		.word	193
 1901 001c E2000000 		.word	226
 1902 0020 02010000 		.word	258
 1903 0024 22010000 		.word	290
 1904 0028 42010000 		.word	322
 1905 002c 63010000 		.word	355
 1906 0030 83010000 		.word	387
 1907 0034 A3010000 		.word	419
 1908 0038 C3010000 		.word	451
 1909 003c E4010000 		.word	484
 1910 0040 04020000 		.word	516
 1911 0044 24020000 		.word	548
 1912 0048 44020000 		.word	580
 1913 004c 65020000 		.word	613
 1914 0050 85020000 		.word	645
 1915 0054 A5020000 		.word	677
 1916 0058 C5020000 		.word	709
 1917 005c E6020000 		.word	742
 1918 0060 06030000 		.word	774
 1919 0064 26030000 		.word	806
 1920 0068 46030000 		.word	838
 1921 006c 67030000 		.word	871
 1922 0070 87030000 		.word	903
 1923 0074 A7030000 		.word	935
 1924 0078 C7030000 		.word	967
 1925 007c E8030000 		.word	1000
 1926 0080 08040000 		.word	1032
 1927 0084 28040000 		.word	1064
 1928 0088 48040000 		.word	1096
 1929 008c 69040000 		.word	1129
 1930 0090 89040000 		.word	1161
 1931 0094 A9040000 		.word	1193
 1932 0098 C9040000 		.word	1225
 1933 009c EA040000 		.word	1258
 1934 00a0 0A050000 		.word	1290
 1935 00a4 2A050000 		.word	1322
 1936 00a8 4A050000 		.word	1354
 1937 00ac 6A050000 		.word	1386
 1938 00b0 8B050000 		.word	1419
 1939 00b4 AB050000 		.word	1451
 1940 00b8 CB050000 		.word	1483
 1941 00bc EB050000 		.word	1515
 1942 00c0 0C060000 		.word	1548
 1943 00c4 2C060000 		.word	1580
 1944 00c8 4C060000 		.word	1612
 1945 00cc 6C060000 		.word	1644
 1946 00d0 8D060000 		.word	1677
 1947 00d4 AD060000 		.word	1709
 1948 00d8 CD060000 		.word	1741
 1949 00dc ED060000 		.word	1773
 1950 00e0 0E070000 		.word	1806
 1951 00e4 2E070000 		.word	1838
 1952 00e8 4E070000 		.word	1870
 1953 00ec 6E070000 		.word	1902
 1954 00f0 8F070000 		.word	1935
 1955 00f4 AF070000 		.word	1967
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 66


 1956 00f8 CF070000 		.word	1999
 1957 00fc EF070000 		.word	2031
 1958 0100 10080000 		.word	2064
 1959 0104 30080000 		.word	2096
 1960 0108 50080000 		.word	2128
 1961 010c 70080000 		.word	2160
 1962 0110 91080000 		.word	2193
 1963 0114 B1080000 		.word	2225
 1964 0118 D1080000 		.word	2257
 1965 011c F1080000 		.word	2289
 1966 0120 12090000 		.word	2322
 1967 0124 32090000 		.word	2354
 1968 0128 52090000 		.word	2386
 1969 012c 72090000 		.word	2418
 1970 0130 93090000 		.word	2451
 1971 0134 B3090000 		.word	2483
 1972 0138 D3090000 		.word	2515
 1973 013c F3090000 		.word	2547
 1974 0140 140A0000 		.word	2580
 1975 0144 340A0000 		.word	2612
 1976 0148 540A0000 		.word	2644
 1977 014c 740A0000 		.word	2676
 1978 0150 950A0000 		.word	2709
 1979 0154 B50A0000 		.word	2741
 1980 0158 D50A0000 		.word	2773
 1981 015c F50A0000 		.word	2805
 1982 0160 150B0000 		.word	2837
 1983 0164 360B0000 		.word	2870
 1984 0168 560B0000 		.word	2902
 1985 016c 760B0000 		.word	2934
 1986 0170 960B0000 		.word	2966
 1987 0174 B70B0000 		.word	2999
 1988 0178 D70B0000 		.word	3031
 1989 017c F70B0000 		.word	3063
 1990 0180 170C0000 		.word	3095
 1991 0184 380C0000 		.word	3128
 1992 0188 580C0000 		.word	3160
 1993 018c 780C0000 		.word	3192
 1994 0190 980C0000 		.word	3224
 1995 0194 B90C0000 		.word	3257
 1996 0198 D90C0000 		.word	3289
 1997 019c F90C0000 		.word	3321
 1998 01a0 190D0000 		.word	3353
 1999 01a4 3A0D0000 		.word	3386
 2000 01a8 5A0D0000 		.word	3418
 2001 01ac 7A0D0000 		.word	3450
 2002 01b0 9A0D0000 		.word	3482
 2003 01b4 BB0D0000 		.word	3515
 2004 01b8 DB0D0000 		.word	3547
 2005 01bc FB0D0000 		.word	3579
 2006 01c0 1B0E0000 		.word	3611
 2007 01c4 3C0E0000 		.word	3644
 2008 01c8 5C0E0000 		.word	3676
 2009 01cc 7C0E0000 		.word	3708
 2010 01d0 9C0E0000 		.word	3740
 2011 01d4 BD0E0000 		.word	3773
 2012 01d8 DD0E0000 		.word	3805
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 67


 2013 01dc FD0E0000 		.word	3837
 2014 01e0 1D0F0000 		.word	3869
 2015 01e4 3E0F0000 		.word	3902
 2016 01e8 5E0F0000 		.word	3934
 2017 01ec 7E0F0000 		.word	3966
 2018 01f0 9E0F0000 		.word	3998
 2019 01f4 BF0F0000 		.word	4031
 2020 01f8 DF0F0000 		.word	4063
 2021 01fc FF0F0000 		.word	4095
 2022              		.text
 2023              	.Letext0:
 2024              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2025              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2026              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2027              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2028              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2029              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2030              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2031              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2032              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2033              		.file 12 "Core/Inc/main.h"
 2034              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2035              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2036              		.file 15 "Core/Inc/lcd_stm32f4.h"
 2037              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2038              		.file 17 "<built-in>"
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:192    .text.MX_GPIO_Init:000000d4 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:200    .text.MX_DMA_Init:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:205    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:254    .text.MX_DMA_Init:00000030 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:259    .rodata.EXTI0_IRQHandler.str1.4:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:278    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:284    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:354    .text.EXTI0_IRQHandler:00000052 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:360    .text.EXTI0_IRQHandler:00000058 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:485    .text.EXTI0_IRQHandler:0000010c $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1182   .bss.last_interrupt_time.0:00000000 last_interrupt_time.0
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1216   .bss.htim2:00000000 htim2
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1202   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1188   .bss.current_waveform:00000000 current_waveform
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1195   .data.DestAddress:00000000 DestAddress
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1223   .data.Sin_LUT:00000000 Sin_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1893   .data.Saw_LUT:00000000 Saw_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1759   .data.Triangle_LUT:00000000 Triangle_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1625   .data.Piano_LUT:00000000 Piano_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1491   .data.Guitar_LUT:00000000 Guitar_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1357   .data.Drum_LUT:00000000 Drum_LUT
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:507    .text.Error_Handler:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:513    .text.Error_Handler:00000000 Error_Handler
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:545    .text.MX_TIM2_Init:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:550    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:777    .text.MX_TIM2_Init:000000f8 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:785    .text.MX_TIM3_Init:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:790    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:943    .text.MX_TIM3_Init:0000009c $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1209   .bss.htim3:00000000 htim3
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:949    .text.SystemClock_Config:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:955    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1084   .text.SystemClock_Config:00000084 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1090   .text.main:00000000 $t
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1096   .text.main:00000000 main
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1169   .text.main:00000058 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1179   .bss.last_interrupt_time.0:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1189   .bss.current_waveform:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1192   .data.DestAddress:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1199   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1206   .bss.htim3:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1213   .bss.htim2:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1220   .data.Sin_LUT:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1354   .data.Drum_LUT:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1488   .data.Guitar_LUT:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1622   .data.Piano_LUT:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1756   .data.Triangle_LUT:00000000 $d
C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s:1890   .data.Saw_LUT:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
ARM GAS  C:\Users\thele\AppData\Local\Temp\cc8nMMQA.s 			page 69


HAL_NVIC_EnableIRQ
HAL_GetTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_Abort_IT
HAL_DMA_Start_IT
lcd_command
lcd_putstring
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
init_LCD
